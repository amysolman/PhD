theme(axis.text.x = element_text(angle = 90))
View(dom_tot_trim_R)
View(dom_tot)
dom_tot_trim_R <- dom_tot[dom_tot$R.Procrustes < 0.9,]
dom_tot_value_R <- as.numeric(dom_tot_trim_R$Truncated[1])
ggplot(dom, aes(x=Truncated, y=R.Procrustes, group=Rank)) +
geom_line(aes(color=Rank))+
geom_point(aes(color=Rank))+
ylim(0,1)+
scale_x_continuous(breaks = dom$Truncated)+
theme_bw()+
geom_vline(xintercept = dom_tot_value_R, linetype="dotted",
color = "blue", size=1)+
xlab("% ASVs Removed")+
ylab("Procrustes R Value")+
ggtitle("16S data set-based Procrustes R value between original data set\n NMDS and datasets truncated by the dominant fraction")+
theme(axis.text.x = element_text(angle = 90))
p1 <- ggplot(dom, aes(x=Truncated, y=corrcoeff, group=Rank)) +
geom_line(aes(color=Rank))+
geom_point(aes(color=Rank))+
ylim(0,1)+
scale_x_continuous(breaks = dom$Truncated)+
theme_bw()+
geom_vline(xintercept = dom_tot_value, linetype="dotted",
color = "blue", size=1)+
xlab("% ASVs Removed")+
ylab("Spearman's Correlation Coefficient")+
ggtitle("16S Arctic data set-based Spearman's correlation coefficients between original data set\n dissimilarity matrix and matrices truncated by the dominant fraction")+
theme(axis.text.x = element_text(angle = 90))
pdf("results/16S-Arctic-spearmans-dominant.pdf")
print(p1)
dev.off()
p2 <- ggplot(dom, aes(x=Truncated, y=R.Procrustes, group=Rank)) +
geom_line(aes(color=Rank))+
geom_point(aes(color=Rank))+
ylim(0,1)+
scale_x_continuous(breaks = dom$Truncated)+
theme_bw()+
geom_vline(xintercept = dom_tot_value_R, linetype="dotted",
color = "blue", size=1)+
xlab("% ASVs Removed")+
ylab("Procrustes R Value")+
ggtitle("16S data set-based Procrustes R value between original data set\n NMDS and datasets truncated by the dominant fraction")+
theme(axis.text.x = element_text(angle = 90))
pdf("results/16S-Arctic-procrustes-dominant.pdf")
print(p2)
dev.off()
#Dominant Spearman's rank results
#Subset dataframe
rare <- total_results[total_results$Type == "Rare",]
#At what truncation point does the total dataset drop below 0.8 coefficient?
rare_tot <- rare[rare$Rank == "Total",]
rare_tot_trim <- rare_tot[rare_tot$corrcoeff < 0.8,]
rare_tot_value <- as.numeric(rare_tot_trim$Truncated[1])
p3 <- ggplot(rare, aes(x=Truncated, y=corrcoeff, group=Rank)) +
geom_line(aes(color=Rank))+
geom_point(aes(color=Rank))+
ylim(0,1)+
scale_x_continuous(breaks = rare$Truncated)+
theme_bw()+
geom_vline(xintercept = rare_tot_value, linetype="dotted",
color = "blue", size=1)+
xlab("% ASVs Removed")+
ylab("Spearman's Correlation Coefficient")+
ggtitle("16S Arctic data set-based Spearman's correlation coefficients between original data set\n dissimilarity matrix and matrices truncated by the rare fraction")+
theme(axis.text.x = element_text(angle = 90))
pdf("results/16S-Arctic-spearmans-rare.pdf")
print(p3)
dev.off()
#At what truncation point does the total dataset drop below 0.8 R value?
rare_tot_trim_R <- rare_tot[rare_tot$R.Procrustes < 0.9,]
rare_tot_value_R <- as.numeric(rare_tot_trim_R$Truncated[1])
p4 <- ggplot(rare, aes(x=Truncated, y=R.Procrustes, group=Rank)) +
geom_line(aes(color=Rank))+
geom_point(aes(color=Rank))+
ylim(0,1)+
scale_x_continuous(breaks = rare$Truncated)+
theme_bw()+
geom_vline(xintercept = rare_tot_value_R, linetype="dotted",
color = "blue", size=1)+
xlab("% ASVs Removed")+
ylab("Procrustes R Value")+
ggtitle("16S data set-based Procrustes R value between original data set\n NMDS and datasets truncated by the rare fraction")+
theme(axis.text.x = element_text(angle = 90))
pdf("results/16S-Arctic-procrustes-rare.pdf")
print(p4)
dev.off()
View(rare)
View(rare_tot)
#Dominant Spearman's rank results
#Subset dataframe
rare <- total_results[total_results$Type == "Rare",]
#At what truncation point does the total dataset drop below 0.8 coefficient?
rare_tot <- rare[rare$Rank == "Total",]
rare_tot_trim <- rare_tot[rare_tot$corrcoeff < 0.85,]
rare_tot_value <- as.numeric(rare_tot_trim$Truncated[1])
p3 <- ggplot(rare, aes(x=Truncated, y=corrcoeff, group=Rank)) +
geom_line(aes(color=Rank))+
geom_point(aes(color=Rank))+
ylim(0,1)+
scale_x_continuous(breaks = rare$Truncated)+
theme_bw()+
geom_vline(xintercept = rare_tot_value, linetype="dotted",
color = "blue", size=1)+
xlab("% ASVs Removed")+
ylab("Spearman's Correlation Coefficient")+
ggtitle("16S Arctic data set-based Spearman's correlation coefficients between original data set\n dissimilarity matrix and matrices truncated by the rare fraction")+
theme(axis.text.x = element_text(angle = 90))
pdf("results/16S-Arctic-spearmans-rare.pdf")
print(p3)
dev.off()
#Rare Procrustes results
#At what truncation point does the total dataset drop below 0.8 R value?
rare_tot_trim_R <- rare_tot[rare_tot$R.Procrustes < 0.95,]
rare_tot_value_R <- as.numeric(rare_tot_trim_R$Truncated[1])
p4 <- ggplot(rare, aes(x=Truncated, y=R.Procrustes, group=Rank)) +
geom_line(aes(color=Rank))+
geom_point(aes(color=Rank))+
ylim(0,1)+
scale_x_continuous(breaks = rare$Truncated)+
theme_bw()+
geom_vline(xintercept = rare_tot_value_R, linetype="dotted",
color = "blue", size=1)+
xlab("% ASVs Removed")+
ylab("Procrustes R Value")+
ggtitle("16S data set-based Procrustes R value between original data set\n NMDS and datasets truncated by the rare fraction")+
theme(axis.text.x = element_text(angle = 90))
pdf("results/16S-Arctic-procrustes-rare.pdf")
print(p4)
dev.off()
View(COtables)
View(rare.truncated.DS.species)
View(rare.truncated.DS.phylum)
View(rare.truncated.DS.phylum[1])
View(rare.truncated.DS.phylum[[1]])
View(rare.truncated.DS.phylum[[2]])
View(rare.truncated.DS.phylum[[3]])
View(dom.truncated.DS.phylum[[1]])
View(dom.truncated.DS.phylum)
View(dom.truncated.DS.phylum[[5]])
View(dom.truncated.DS.phylum[[7]])
View(dom.truncated.DS.phylum[[8]])
View(dom.truncated.DS.phylum[[9]])
View(dom.truncated.DS.phylum[[10]])
View(dom.truncated.DS.phylum[[13]])
View(dom.truncated.DS.phylum[[6]])
ggplot(dom, aes(x=Truncated, y=corrcoeff, group=Rank)) +
geom_line(aes(color=Rank))+
geom_point(aes(color=Rank))+
ylim(0,1)+
scale_x_continuous(breaks = dom$Truncated)+
theme_bw()+
geom_vline(xintercept = dom_tot_value, linetype="dotted",
color = "blue", size=1)+
xlab("% Total Rare ASVs")+
ylab("Spearman's Correlation Coefficient")+
ggtitle("16S Arctic data set-based Spearman's correlation coefficients between original data \n set dissimilarity matrix and matrices truncated by increasing addition of rare types")+
theme(axis.text.x = element_text(angle = 90))
View(dom)
View(cutoff.impact)
View(dom.corr.all)
View(dom.corr.all[[8]])
total_results <- rbind(x1,x2,x3, x4, x5, x6, x7, x8, y1, y2, y3, y4, y5, y6, y7, y8)
#total_results <- tibble::rownames_to_column(total_results, "Truncated")
Truncated <- rownames(x1)
#Add truncated values to rare results
#Subset dataframe
rare <- total_results[total_results$Type == "Rare",]
rare$Truncated = as.numeric(rep(Truncated, 8))
#Add reverse truncated values to dominant results
#Subset dataframe
dom <- total_results[total_results$Type == "Dominant",]
dom$Truncated = as.numeric(rep(rev(Truncated), 8))
View(dom)
#bind the data frames
total_results_rare_dom <- rbind(rare, dom)
#export
write.csv(total_results_rare_dom, "results/16S-arctic-total-results.csv")
#Dominant Spearman's rank results
dom <- total_results_rare_dom[total_results_rare_dom$Type == "Dominant",]
#At what truncation point does the total dataset drop below 0.8 coefficient?
dom_tot <- dom[dom$Rank == "Total",]
dom_tot_trim <- dom_tot[dom_tot$corrcoeff < 0.8,]
dom_tot_value <- as.numeric(dom_tot_trim$Truncated[1])
ggplot(dom, aes(x=Truncated, y=corrcoeff, group=Rank)) +
geom_line(aes(color=Rank))+
geom_point(aes(color=Rank))+
ylim(0,1)+
scale_x_continuous(breaks = dom$Truncated)+
theme_bw()+
geom_vline(xintercept = dom_tot_value, linetype="dotted",
color = "blue", size=1)+
xlab("% Total Rare ASVs")+
ylab("Spearman's Correlation Coefficient")+
ggtitle("16S Arctic data set-based Spearman's correlation coefficients between original data \n set dissimilarity matrix and matrices truncated by increasing addition of rare types")+
theme(axis.text.x = element_text(angle = 90))
#Dominant Spearman's rank results
dom <- total_results_rare_dom[total_results_rare_dom$Type == "Dominant",]
#At what truncation point does the total dataset drop below 0.8 coefficient?
dom_tot <- dom[dom$Rank == "Total",]
dom_tot_trim <- dom_tot[dom_tot$corrcoeff < 0.8,]
dom_tot_value <- as.numeric(dom_tot_trim$Truncated[1])
p1 <- ggplot(dom, aes(x=Truncated, y=corrcoeff, group=Rank)) +
geom_line(aes(color=Rank))+
geom_point(aes(color=Rank))+
ylim(0,1)+
scale_x_continuous(breaks = dom$Truncated)+
theme_bw()+
geom_vline(xintercept = dom_tot_value, linetype="dotted",
color = "blue", size=1)+
xlab("% Total Rare ASVs")+
ylab("Spearman's Correlation Coefficient")+
ggtitle("16S Arctic data set-based Spearman's correlation coefficients between original \n data set dissimilarity matrix and matrices with increasing addition of rare types")+
theme(axis.text.x = element_text(angle = 90))
pdf("results/16S-Arctic-spearmans-dominant.pdf")
print(p1)
dev.off()
#Dominant Procrustes results
#At what truncation point does the total dataset drop below 0.8 R value?
dom_tot_trim_R <- dom_tot[dom_tot$R.Procrustes < 0.9,]
dom_tot_value_R <- as.numeric(dom_tot_trim_R$Truncated[1])
p2 <- ggplot(dom, aes(x=Truncated, y=R.Procrustes, group=Rank)) +
geom_line(aes(color=Rank))+
geom_point(aes(color=Rank))+
ylim(0,1)+
scale_x_continuous(breaks = dom$Truncated)+
theme_bw()+
geom_vline(xintercept = dom_tot_value_R, linetype="dotted",
color = "blue", size=1)+
xlab("% ASVs Removed")+
ylab("Procrustes R Value")+
ggtitle("16S data set-based Procrustes R value between original data set\n NMDS and datasets truncated by increasing addition of rare types")+
theme(axis.text.x = element_text(angle = 90))
pdf("results/16S-Arctic-procrustes-dominant.pdf")
print(p2)
dev.off()
#Dominant Spearman's rank results
#Subset dataframe
rare <- total_results[total_results_rare_dom$Type == "Rare",]
#At what truncation point does the total dataset drop below 0.8 coefficient?
rare_tot <- rare[rare$Rank == "Total",]
rare_tot_trim <- rare_tot[rare_tot$corrcoeff < 0.85,]
rare_tot_value <- as.numeric(rare_tot_trim$Truncated[1])
p3 <- ggplot(rare, aes(x=Truncated, y=corrcoeff, group=Rank)) +
geom_line(aes(color=Rank))+
geom_point(aes(color=Rank))+
ylim(0,1)+
scale_x_continuous(breaks = rare$Truncated)+
theme_bw()+
geom_vline(xintercept = rare_tot_value, linetype="dotted",
color = "blue", size=1)+
xlab("% Total Rare ASVs")+
ylab("Spearman's Correlation Coefficient")+
ggtitle("16S Arctic data set-based Spearman's correlation coefficients between original data \n set dissimilarity matrix and matrices truncated by increasing removal of rare types")+
theme(axis.text.x = element_text(angle = 90))
pdf("results/16S-Arctic-spearmans-rare.pdf")
print(p3)
ggplot(rare, aes(x=Truncated, y=corrcoeff, group=Rank)) +
geom_line(aes(color=Rank))+
geom_point(aes(color=Rank))+
ylim(0,1)+
scale_x_continuous(breaks = rare$Truncated)+
theme_bw()+
geom_vline(xintercept = rare_tot_value, linetype="dotted",
color = "blue", size=1)+
xlab("% Total Rare ASVs")+
ylab("Spearman's Correlation Coefficient")+
ggtitle("16S Arctic data set-based Spearman's correlation coefficients between original\n data set dissimilarity matrix and matrices truncated by increasing removal of rare types")+
theme(axis.text.x = element_text(angle = 90))
View(rare)
#Dominant Spearman's rank results
#Subset dataframe
rare <- total_results_rare_dom[total_results_rare_dom$Type == "Rare",]
#At what truncation point does the total dataset drop below 0.8 coefficient?
rare_tot <- rare[rare$Rank == "Total",]
rare_tot_trim <- rare_tot[rare_tot$corrcoeff < 0.85,]
rare_tot_value <- as.numeric(rare_tot_trim$Truncated[1])
ggplot(rare, aes(x=Truncated, y=corrcoeff, group=Rank)) +
geom_line(aes(color=Rank))+
geom_point(aes(color=Rank))+
ylim(0,1)+
scale_x_continuous(breaks = rare$Truncated)+
theme_bw()+
geom_vline(xintercept = rare_tot_value, linetype="dotted",
color = "blue", size=1)+
xlab("% Total Rare ASVs")+
ylab("Spearman's Correlation Coefficient")+
ggtitle("16S Arctic data set-based Spearman's correlation coefficients between original\n data set dissimilarity matrix and matrices truncated by increasing removal of rare types")+
theme(axis.text.x = element_text(angle = 90))
pdf("results/16S-Arctic-spearmans-rare.pdf")
print(p3)
#Dominant Spearman's rank results
#Subset dataframe
rare <- total_results_rare_dom[total_results_rare_dom$Type == "Rare",]
#At what truncation point does the total dataset drop below 0.8 coefficient?
rare_tot <- rare[rare$Rank == "Total",]
rare_tot_trim <- rare_tot[rare_tot$corrcoeff < 0.85,]
rare_tot_value <- as.numeric(rare_tot_trim$Truncated[1])
p3 <- ggplot(rare, aes(x=Truncated, y=corrcoeff, group=Rank)) +
geom_line(aes(color=Rank))+
geom_point(aes(color=Rank))+
ylim(0,1)+
scale_x_continuous(breaks = rare$Truncated)+
theme_bw()+
geom_vline(xintercept = rare_tot_value, linetype="dotted",
color = "blue", size=1)+
xlab("% Total Rare ASVs")+
ylab("Spearman's Correlation Coefficient")+
ggtitle("16S Arctic data set-based Spearman's correlation coefficients between original\n data set dissimilarity matrix and matrices truncated by increasing removal of rare types")+
theme(axis.text.x = element_text(angle = 90))
pdf("results/16S-Arctic-spearmans-rare.pdf")
print(p3)
dev.off()
#Rare Procrustes results
#At what truncation point does the total dataset drop below 0.8 R value?
rare_tot_trim_R <- rare_tot[rare_tot$R.Procrustes < 0.95,]
rare_tot_value_R <- as.numeric(rare_tot_trim_R$Truncated[1])
p4 <- ggplot(rare, aes(x=Truncated, y=R.Procrustes, group=Rank)) +
geom_line(aes(color=Rank))+
geom_point(aes(color=Rank))+
ylim(0,1)+
scale_x_continuous(breaks = rare$Truncated)+
theme_bw()+
geom_vline(xintercept = rare_tot_value_R, linetype="dotted",
color = "blue", size=1)+
xlab("% Total Rare ASVs")+
ylab("Procrustes R Value")+
ggtitle("16S data set-based Procrustes R value between original data set\n NMDS and datasets truncated by increasing removal of rare types")+
theme(axis.text.x = element_text(angle = 90))
pdf("results/16S-Arctic-procrustes-rare.pdf")
print(p4)
dev.off()
#Dominant Spearman's rank results
#Subset dataframe
rare <- total_results_rare_dom[total_results_rare_dom$Type == "Rare",]
#At what truncation point does the total dataset drop below 0.8 coefficient?
rare_tot <- rare[rare$Rank == "Total",]
rare_tot_trim <- rare_tot[rare_tot$corrcoeff < 0.85,]
rare_tot_value <- as.numeric(rare_tot_trim$Truncated[1])
p3 <- ggplot(rare, aes(x=Truncated, y=corrcoeff, group=Rank)) +
geom_line(aes(color=Rank))+
geom_point(aes(color=Rank))+
ylim(0,1)+
scale_x_continuous(breaks = rare$Truncated)+
theme_bw()+
geom_vline(xintercept = rare_tot_value, linetype="dotted",
color = "blue", size=1)+
xlab("% Total Rare ASVs Removed")+
ylab("Spearman's Correlation Coefficient")+
ggtitle("16S Arctic data set-based Spearman's correlation coefficients between original\n data set dissimilarity matrix and matrices truncated by increasing removal of \nrare types")+
theme(axis.text.x = element_text(angle = 90))
pdf("results/16S-Arctic-spearmans-rare.pdf")
print(p3)
dev.off()
#Rare Procrustes results
#At what truncation point does the total dataset drop below 0.8 R value?
rare_tot_trim_R <- rare_tot[rare_tot$R.Procrustes < 0.95,]
rare_tot_value_R <- as.numeric(rare_tot_trim_R$Truncated[1])
p4 <- ggplot(rare, aes(x=Truncated, y=R.Procrustes, group=Rank)) +
geom_line(aes(color=Rank))+
geom_point(aes(color=Rank))+
ylim(0,1)+
scale_x_continuous(breaks = rare$Truncated)+
theme_bw()+
geom_vline(xintercept = rare_tot_value_R, linetype="dotted",
color = "blue", size=1)+
xlab("% Total Rare ASVs Removed")+
ylab("Procrustes R Value")+
ggtitle("16S data set-based Procrustes R value between original data set\n NMDS and datasets truncated by increasing removal of\n rare types")+
theme(axis.text.x = element_text(angle = 90))
pdf("results/16S-Arctic-procrustes-rare.pdf")
print(p4)
dev.off()
N<-M[,order(M[nrow(M),],decreasing=TRUE)]
View(N)
View(M)
#Get the total number of counts for each ASV
counts <- data.frame(otu_table(ps_arc_filter))
View(counts)
sums <- rowSums(counts)
sums <- data.frame(rowSums(counts))
View(sums)
sums_order <- order(sums)
?order
sums_order <- sums[order(sums$rowSums.counts.),]
sums_order > sums[with(sums, order("rowSums.counts.")), ]
sums_order <- order(sums)
sums <- data.frame(rowSums(counts))
sums_order <- order(sums)
sums_order <- data.frame(order(sums))
View(sums_order)
View(sums)
#What is 15% of total counts
total_counts <- sum(sums)
#What is 15% of total counts
total_counts <- sum(sums)*0.15
#What is 5% of total counts
total_counts_5 <- sum(sums)*0.05
asv_tab <- data.frame(otu_table(ps_arc))
asv_abun <- data.frame(rowSums(asv_tab))
order_abun <- data.frame(asv_abun[order(-asv_abun$rowSums.asv_tab.), , drop=FALSE])
View(order_abun)
i = 1
my_counts <- vector()
my_counts <- c(my_counts, my_counts[i] + order_abun$rowSums.asv_tab.[i])
order_abun$rowSums.asv_tab.[i]
order_abun$rowSums.asv_tab.[i] + 3
my_counts <- c(0)
my_counts <- c(0)
for (i in 1:nrow(order_abun)){
my_counts <- c(my_counts, order_abun$rowSums.asv_tab.[i] + my_counts[i])
}
asv_tab <- data.frame(otu_table(ps_arc_filter))
asv_abun <- data.frame(rowSums(asv_tab))
order_abun <- data.frame(asv_abun[order(-asv_abun$rowSums.asv_tab.), , drop=FALSE])
my_counts <- c(0)
for (i in 1:nrow(order_abun)){
my_counts <- c(my_counts, order_abun$rowSums.asv_tab.[i] + my_counts[i])
}
my_counts <-my_counts[-c(1)]
order_abun$Total_Counts <- my_counts
View(order_abun)
#What is 15% of total counts
total_counts_15 <- sum(sums)*0.15
total_counts_15 <- sum(sums)*0.15
#What is 5% of total counts
total_counts_5 <- sum(sums)*0.05
asv_tab <- data.frame(otu_table(ps_arc_filter))
asv_abun <- data.frame(rowSums(asv_tab))
order_abun <- data.frame(asv_abun[order(-asv_abun$rowSums.asv_tab.), , drop=FALSE])
my_counts <- c(0)
for (i in 1:nrow(order_abun)){
my_counts <- c(my_counts, order_abun$rowSums.asv_tab.[i] + my_counts[i])
}
my_counts <-my_counts[-c(1)]
order_abun_forward$Total_Counts <- my_counts
order_abun_forward <-order_abun
order_abun_forward$Total_Counts <- my_counts
#reverse abundance table
order_abun_rev <- rev(order_abun)
View(order_abun_rev)
order_abun_rev <- data.frame(asv_abun[order(asv_abun$rowSums.asv_tab.), , drop=FALSE])
View(order_abun_rev)
total_counts_15 <- sum(sums)*0.15
#What is 5% of total counts
total_counts_5 <- sum(sums)*0.05
asv_tab <- data.frame(otu_table(ps_arc_filter))
asv_abun <- data.frame(rowSums(asv_tab))
order_abun <- data.frame(asv_abun[order(-asv_abun$rowSums.asv_tab.), , drop=FALSE])
order_abun_rev <- data.frame(asv_abun[order(asv_abun$rowSums.asv_tab.), , drop=FALSE])
my_counts <- c(0)
for (i in 1:nrow(order_abun)){
my_counts <- c(my_counts, order_abun$rowSums.asv_tab.[i] + my_counts[i])
}
my_counts <-my_counts[-c(1)]
order_abun$Total_Counts <- my_counts
my_counts_2 <- c(0)
for (i in 1:nrow(order_abun_rev)){
my_counts_2 <- c(my_counts, order_abun_rev$rowSums.asv_tab.[i] + my_counts[i])
}
my_counts_2 <-my_counts_2[-c(1)]
order_abun_rev$Total_Counts <- my_counts_2
View(order_abun_rev)
my_counts_2 <- c(0)
for (i in 1:nrow(order_abun_rev)){
my_counts_2 <- c(my_counts_2, order_abun_rev$rowSums.asv_tab.[i] + my_counts[i])
}
my_counts_2 <-my_counts_2[-c(1)]
order_abun_rev$Total_Counts <- my_counts_2
View(order_abun_rev)
my_counts_2 <- c(0)
for (i in 1:nrow(order_abun_rev)){
my_counts_2 <- c(my_counts_2, order_abun_rev$rowSums.asv_tab.[i] + my_counts_2[i])
}
my_counts_2 <-my_counts_2[-c(1)]
order_abun_rev$Total_Counts <- my_counts_2
View(order_abun_rev)
#Subset Abundant community
abun_com <- order_abun[order_abun$Total_Counts =< total_counts_15]
#Subset Abundant community
abun_com <- order_abun[order_abun$Total_Counts <= total_counts_15, ]
View(abun_com)
#Subset Rare community
rare_com <- order_abun_rev[order_abun_rev$Total_Counts <= total_counts_5,]
View(rare_com)
int_com <- rbind(order_abun[order_abun$Total_Counts >= total_counts_15, ], order_abun_rev[order_abun_rev$Total_Counts >= total_counts_5,])
#Subset Intermediate community
int_com <- order_abun[!(name(order_abun) %in% name(abun_com)),]
#Subset Intermediate community
int_com <- order_abun[!(names(order_abun) %in% names(abun_com)),]
names(order_abun)
#Subset Intermediate community
int_com <- order_abun[!(row.names(order_abun) %in% row.names(abun_com)),]
int_com <- int_com[!(row.names(int_com) %in% row.names(rare_come)),]
int_com <- int_com[!(row.names(int_com) %in% row.names(rare_com)),]
sum(sums)
x = sum(sums)
x/100
View(counts)
View(order_abun)
####Calculating relative abundances
rel_abun <- order_abun$Total_Counts/sum(sums)
View(rel_abun)
####Calculating relative abundances
order_abun$rel_abun <- order_abun$Total_Counts/sum(sums)
View(order_abun)
####Calculating relative abundances
order_abun$rel_abun <- order_abun$rowSums.asv_tab./sum(sums)
View(order_abun)
View(abun_com)
View(rare_com)
View(order_abun)
