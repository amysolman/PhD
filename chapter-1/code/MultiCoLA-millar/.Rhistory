knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
graphics.off()
#load packages
# install.packages("janitor")
# library(janitor) #to get column totals
# library(tibble) #to convert rowname to column and vice versa
library(vegan)
library(MASS)
#load phyloseq object
ps_pro <- readRDS("../results/16S/phylo-objects/16S-phyloseq-object-rarefied-decontam.rds")
rm(list=ls())
graphics.off()
#load packages
# install.packages("janitor")
# library(janitor) #to get column totals
# library(tibble) #to convert rowname to column and vice versa
library(vegan)
library(MASS)
#load phyloseq object
ps_pro <- readRDS("../../results/16S/phylo-objects/16S-phyloseq-object-rarefied-decontam.rds")
#ps_euk <- readRDS("../results/18S/phylo-objects/18S-phyloseq-object-rarefied.rds")
#source our data prep function
source("solman-MultiCoLA-input-file-prep.R")
#source pre-written MultiCoLA functions from Gobet et al
source("taxa.pooler.1.4.r")
all_taxa_pooled<-taxa.pooler(M)
M <- MultiCoLA_input_file_prep(ps_pro)
all_taxa_pooled<-taxa.pooler(M)
View(M)
all_taxa_pooled<-taxa.pooler(M)
View(all_taxa_pooled)
source("COtables.1.4.r")
truncated.DS.i<-COtables(all_taxa_pooled[[i]], Type="ADS",typem="dominant")
View(M)
taxa_levels = 7
data_sets_store <- list()
for (i in 1:taxa_levels){
data_sets_store[i] <-COtables(all_taxa_pooled[[i]], Type="ADS",typem="dominant")
}
for (i in 1:taxa_levels){
data_sets_store[[i]] <-COtables(all_taxa_pooled[[i]], Type="ADS",typem="dominant")
}
for (i in 1:7){
data_sets_store[[i]] <-COtables(all_taxa_pooled[[i]], Type="ADS",typem="dominant")
}
truncated.DS.1<-COtables(all_taxa_pooled[[1]], Type="ADS",typem="dominant")
View(all_taxa_pooled)
View(all_taxa_pooled[[1]])
COtables(all_taxa_pooled[[1]], Type="ADS",typem="dominant")
View(COtables)
View(M)
truncated.DS.phylum<-COtables(all_taxa_pooled[[1]], Type="ADS",typem="dominant")
ODS = all_taxa_pooled[[1]]
COP<-function(ODS,z,Type,typem){###################
#to remove all the lines in the matrix for which the sum of the line is 0
CLrow<-function(m) {
#to create a column of 0 in the last column
m=cbind(m,matrix(0,nrow(m),1))
m[,ncol(m)]=apply(m,1,sum)
#to keep only the lines without 0
mclean=subset(m,m[,ncol(m)]!=0)
mclean=mclean[,-ncol(mclean)]
return (mclean)
}
########################
CLcol<-function(m) {
#transpose the matrix and apply the same function as before
#then transpose back
m=t(m)
#to create a column of 0 in the last column
m=cbind(m,matrix(0,nrow(m),1))
m[,ncol(m)]=apply(m,1,sum)
#to keep only the lines without 0
mclean=subset(m,m[,ncol(m)]!=0)
mclean=mclean[,-ncol(mclean)]
mclean=t(mclean)
return (mclean)
}
#Application of a percentage cut-off to the original dataset to obtain abundant dataset
##all dataset-based cutoff
if(Type=="ADS"){
M<-rbind(ODS,apply(ODS,2,sum))	#add the column sum as a last row of the matrix M
if(typem=="dominant"){N<-M[,order(M[nrow(M),],decreasing=TRUE)]}	#order the columns of M by their decreasing sum
if(typem=="rare"){N<-M[,order(M[nrow(M),])]}  #order the columns of M by their increasing sum
Q<-N[1:(nrow(N)-1),]	#remove the last row (with the sum of the columns)
L<-ncol(Q)
K<-nrow(Q)
M1<-t(matrix(NA,L))	#create a vector to store sum of successive matrices
Q1<-matrix(NA,K,L)	#create a matrix to store new data
perc<-z*sum(ODS)
for (i in 1:L){	###for #1
M1[,i]<-sum(Q[,1:i])
if (M1[,i]<=perc) {Q1[,1:i]=Q[,1:i]}
row.names(Q1)=row.names(Q)
colnames(Q1)=colnames(Q)
if (M1[,i]>perc) {Q1[,1:i]==0}
}#end for #1
Q3<-Q1[,-which(apply(Q1,2,function(x)all(is.na(x))))]
Q3<-CLcol(CLrow(as.data.frame(Q3)))	#remove rows and columns whose sum=0
} #end"ADS"
##sample-based cutoff
if(Type=="SAM"){
Q1<-ODS
if(typem=="dominant"){Q1[Q1<z]<-0}	# all species presents less than j times =0
if(typem=="rare"){Q1[Q1>z]<-0}	# all species presents more than j times =0
Q3<-CLcol(CLrow(Q1))	#remove rows and columns whose sum=0
} #end "SAM"
return(Q3)
} #end COP
#create a matrix to store VPvalues for each CO
LISTRES<-vector("list",21)
names(LISTRES)<-c(0.01,seq(0.05,0.95,by=0.05),0.99)
Type = "ADS"
typem="dominant"
for(i in 1:21){
LISTRES[[i]]=COP(ODS,z=as.numeric(names(LISTRES)[i]),Type,typem)
}
View(LISTRES)
M<-rbind(ODS,apply(ODS,2,sum))	#add the column sum as a last row of the matrix M
if(typem=="dominant"){N<-M[,order(M[nrow(M),],decreasing=TRUE)]}	#order the columns of M by their decreasing sum
if(typem=="rare"){N<-M[,order(M[nrow(M),])]}  #order the columns of M by their increasing sum
Q<-N[1:(nrow(N)-1),]	#remove the last row (with the sum of the columns)
N[1:(nrow(N)-1),]
N
N[1:nrow(N)-1,]
nrow(N)
if(typem=="dominant"){N<-M[,order(M[nrow(M),],decreasing=TRUE, drop=FALSE)]}	#order the columns of M by their decreasing sum
if(typem=="rare"){N<-M[,order(M[nrow(M),])]}  #order the columns of M by their increasing sum
Q<-N[1:(nrow(N)-1),]	#remove the last row (with the sum of the columns)
N<-M[,order(M[nrow(M),],decreasing=TRUE, drop=FALSE)]
N<-M[,order(M[nrow(M),],decreasing=TRUE, , drop=FALSE)]
N<-M[,order(M[nrow(M),],decreasing=TRUE, ) , drop=FALSE]
N<-M[,order(M[nrow(M),])]
View(M)
View(M[,order(M[nrow(M),])])
M <- MultiCoLA_input_file_prep(ps_pro)
N<-M[,order(M[nrow(M),])]
M <- MultiCoLA_input_file_prep(ps_pro)
all_taxa_pooled<-taxa.pooler(M)
rm(N)
ODS = all_taxa_pooled[[1]]
Type = "ADS"
typem="dominant"
COP<-function(ODS,z,Type,typem){###################
#to remove all the lines in the matrix for which the sum of the line is 0
CLrow<-function(m) {
#to create a column of 0 in the last column
m=cbind(m,matrix(0,nrow(m),1))
m[,ncol(m)]=apply(m,1,sum)
#to keep only the lines without 0
mclean=subset(m,m[,ncol(m)]!=0)
mclean=mclean[,-ncol(mclean)]
return (mclean)
}
########################
CLcol<-function(m) {
#transpose the matrix and apply the same function as before
#then transpose back
m=t(m)
#to create a column of 0 in the last column
m=cbind(m,matrix(0,nrow(m),1))
m[,ncol(m)]=apply(m,1,sum)
#to keep only the lines without 0
mclean=subset(m,m[,ncol(m)]!=0)
mclean=mclean[,-ncol(mclean)]
mclean=t(mclean)
return (mclean)
}
#Application of a percentage cut-off to the original dataset to obtain abundant dataset
##all dataset-based cutoff
if(Type=="ADS"){
M<-rbind(ODS,apply(ODS,2,sum))	#add the column sum as a last row of the matrix M
if(typem=="dominant"){N<-M[,order(M[nrow(M),],decreasing=TRUE, drop=FALSE)]}	#order the columns of M by their decreasing sum
if(typem=="rare"){N<-M[,order(M[nrow(M),])]}  #order the columns of M by their increasing sum
Q<-N[1:(nrow(N)-1),]	#remove the last row (with the sum of the columns)
L<-ncol(Q)
K<-nrow(Q)
M1<-t(matrix(NA,L))	#create a vector to store sum of successive matrices
Q1<-matrix(NA,K,L)	#create a matrix to store new data
perc<-z*sum(ODS)
for (i in 1:L){	###for #1
M1[,i]<-sum(Q[,1:i])
if (M1[,i]<=perc) {Q1[,1:i]=Q[,1:i]}
row.names(Q1)=row.names(Q)
colnames(Q1)=colnames(Q)
if (M1[,i]>perc) {Q1[,1:i]==0}
}#end for #1
Q3<-Q1[,-which(apply(Q1,2,function(x)all(is.na(x))))]
Q3<-CLcol(CLrow(as.data.frame(Q3)))	#remove rows and columns whose sum=0
} #end"ADS"
##sample-based cutoff
if(Type=="SAM"){
Q1<-ODS
if(typem=="dominant"){Q1[Q1<z]<-0}	# all species presents less than j times =0
if(typem=="rare"){Q1[Q1>z]<-0}	# all species presents more than j times =0
Q3<-CLcol(CLrow(Q1))	#remove rows and columns whose sum=0
} #end "SAM"
return(Q3)
} #end COP
if(Type=="ADS"){
#create a matrix to store VPvalues for each CO
LISTRES<-vector("list",21)
names(LISTRES)<-c(0.01,seq(0.05,0.95,by=0.05),0.99)
for(i in 1:21){
LISTRES[[i]]=COP(ODS,z=as.numeric(names(LISTRES)[i]),Type,typem)
}
} #end if "ADS"
#create a matrix to store VPvalues for each CO
LISTRES<-vector("list",21)
names(LISTRES)<-c(0.01,seq(0.05,0.95,by=0.05),0.99)
M<-rbind(ODS,apply(ODS,2,sum))	#add the column sum as a last row of the matrix M
ODS = all_taxa_pooled[[2]]
View(ODS)
Type = "ADS"
typem="dominant"
M<-rbind(ODS,apply(ODS,2,sum))	#add the column sum as a last row of the matrix M
if(Type=="ADS"){
#create a matrix to store VPvalues for each CO
LISTRES<-vector("list",21)
names(LISTRES)<-c(0.01,seq(0.05,0.95,by=0.05),0.99)
for(i in 1:21){
LISTRES[[i]]=COP(ODS,z=as.numeric(names(LISTRES)[i]),Type,typem)
}
} #end if "ADS"
ps_pro <- readRDS("../results/16S/phylo-objects/16S-phyloseq-object-rarefied-decontam.rds")
ps_pro <- readRDS(".//../results/16S/phylo-objects/16S-phyloseq-object-rarefied-decontam.rds")
ps_pro <- readRDS("../../results/16S/phylo-objects/16S-phyloseq-object-rarefied-decontam.rds")
taxa_levels = 7
M <- MultiCoLA_input_file_prep(ps_pro)
all_taxa_pooled<-taxa.pooler(M)
#source our data prep function
source("solman-MultiCoLA-input-file-prep.R")
M <- MultiCoLA_input_file_prep(ps_pro)
#source our data prep function
source("solman-MultiCoLA-input-file-prep.R")
M <- MultiCoLA_input_file_prep(ps_pro)
truncated.DS.phylum<-COtables(all_taxa_pooled[[1]], Type="ADS",typem="dominant")
all_taxa_pooled<-taxa.pooler(M)
truncated.DS.phylum<-COtables(all_taxa_pooled[[1]], Type="ADS",typem="dominant")
View(truncated.DS.phylum)
taxa_levels = 6
data_sets_store <- list()
for (i in 1:taxa_levels){
data_sets_store[[i]] <-COtables(all_taxa_pooled[[i]], Type="ADS",typem="dominant")
}
View(data_sets_store)
rm(list=ls())
graphics.off()
#load packages
# install.packages("janitor")
# library(janitor) #to get column totals
# library(tibble) #to convert rowname to column and vice versa
library(vegan)
library(MASS)
#load phyloseq object
ps_pro <- readRDS("../../results/16S/phylo-objects/16S-phyloseq-object-rarefied-decontam.rds")
#ps_euk <- readRDS("../results/18S/phylo-objects/18S-phyloseq-object-rarefied.rds")
#source our data prep function
source("solman-MultiCoLA-input-file-prep.R")
#source pre-written MultiCoLA functions from Gobet et al
source("taxa.pooler.1.4.r")
source("COtables.1.4.r")
my_phylo = ps_pro
taxa_levels = 6
M <- MultiCoLA_input_file_prep(my_phylo)
all_taxa_pooled<-taxa.pooler(M)
#Dataset based dominant
ADS_DOM_store <- list()
for (i in 1:taxa_levels){
ADS_DOM_store[[i]] <-COtables(all_taxa_pooled[[i]], Type="ADS",typem="dominant")
}
#Dataset based rare
ADS_RARE_store <- list()
for (i in 1:taxa_levels){
ADS_RARE_store[[i]] <-COtables(all_taxa_pooled[[i]], Type="ADS",typem="rare")
}
#Sample based dominant
SAM_DOM_store <- list()
for (i in 1:taxa_levels){
SAM_DOM_store[[i]] <-COtables(all_taxa_pooled[[i]], Type="SAM",typem="dominant")
}
#Sample based rare
SAM_RARE_store <- list()
for (i in 1:taxa_levels){
SAM_RARE_store[[i]] <-COtables(all_taxa_pooled[[i]], Type="SAM",typem="rare")
}
View(ADS_DOM_store)
View(ADS_RARE_store)
source("cutoff.impact.1.4.r")
View(all_taxa_pooled)
corr.all<-cutoff.impact(all_taxa_pooled,Type="ADS",corcoef="spearman",typem="dominant")
View(cutoff.impact)
rm(list=ls())
graphics.off()
#load packages
library(vegan)
library(MASS)
#load phyloseq object
ps_pro <- readRDS("../../results/16S/phylo-objects/16S-phyloseq-object-rarefied-decontam.rds")
#ps_euk <- readRDS("../results/18S/phylo-objects/18S-phyloseq-object-rarefied.rds")
#source our data prep function
source("solman-MultiCoLA-input-file-prep.R")
#source pre-written MultiCoLA functions from Gobet et al
source("taxa.pooler.1.4.r") #step 2.1
source("COtables.1.4.r") #step 2.2
source("cutoff.impact.1.4.r") #step 2.3
source("cutoff.impact.fig.1.4.r") #step 2.4
source("VP.COL.1.4.r") #step 3.1
source("corrcoeff.ENV.1.4.r") #step 3.2
source("signif.1.4.r") #step 3.3
my_phylo = ps_pro
taxa_levels = 6
M <- MultiCoLA_input_file_prep(my_phylo)
all_taxa_pooled<-taxa.pooler(M)
all_taxa_pooled<-taxa.pooler(M)
View(M)
View(all_taxa_pooled)
#Dataset based dominant
ADS_DOM_store <- list()
for (i in 1:taxa_levels){
ADS_DOM_store[[i]] <-COtables(all_taxa_pooled[[i]], Type="ADS",typem="dominant")
}
#Dataset based rare
ADS_RARE_store <- list()
for (i in 1:taxa_levels){
ADS_RARE_store[[i]] <-COtables(all_taxa_pooled[[i]], Type="ADS",typem="rare")
}
#Sample based dominant
SAM_DOM_store <- list()
for (i in 1:taxa_levels){
SAM_DOM_store[[i]] <-COtables(all_taxa_pooled[[i]], Type="SAM",typem="dominant")
}
#Sample based rare
SAM_RARE_store <- list()
for (i in 1:taxa_levels){
SAM_RARE_store[[i]] <-COtables(all_taxa_pooled[[i]], Type="SAM",typem="rare")
}
View(ADS_DOM_store)
View(all_taxa_pooled)
corr.all<-cutoff.impact(all_taxa_pooled,Type="ADS",corcoef="spearman",typem="dominant")
truncated.DS.phylum<-COtables(all_taxa_pooled[[1]], Type="ADS",typem="dominant") truncated.DS.class<-COtables(all_taxa_pooled[[2]], Type="ADS",typem="dominant")
truncated.DS.phylum<-COtables(all_taxa_pooled[[1]], Type="ADS",typem="dominant") truncated.DS.class<-COtables(all_taxa_pooled[[2]], Type="ADS",typem="dominant")
truncated.DS.phylum<-COtables(all_taxa_pooled[[1]], Type="ADS",typem="dominant")
truncated.DS.class<-COtables(all_taxa_pooled[[2]], Type="ADS",typem="dominant")
corr.all<-cutoff.impact(all_taxa_pooled,Type="ADS",corcoef="spearman",typem="dominant")
View(cutoff.impact)
View(M)
View(all_taxa_pooled)
rm(list=ls())
graphics.off()
#load packages
library(vegan)
library(MASS)
#load phyloseq object
ps_pro <- readRDS("../../results/16S/phylo-objects/16S-phyloseq-object-rarefied-decontam.rds")
#ps_euk <- readRDS("../results/18S/phylo-objects/18S-phyloseq-object-rarefied.rds")
#source our data prep function
source("solman-MultiCoLA-input-file-prep.R")
#source pre-written MultiCoLA functions from Gobet et al
source("taxa.pooler.1.4.r") #step 2.1
source("COtables.1.4.r") #step 2.2
source("cutoff.impact.1.4.r") #step 2.3
source("cutoff.impact.fig.1.4.r") #step 2.4
source("VP.COL.1.4.r") #step 3.1
source("corrcoeff.ENV.1.4.r") #step 3.2
source("signif.1.4.r") #step 3.3
my_phylo = ps_pro
taxa_levels = 6
M <- MultiCoLA_input_file_prep(my_phylo)
all_taxa_pooled<-taxa.pooler(M)
# #Dataset based dominant
# ADS_DOM_store <- list()
# for (i in 1:taxa_levels){
#   ADS_DOM_store[[i]] <-COtables(all_taxa_pooled[[i]], Type="ADS",typem="dominant")
# }
#
# #Dataset based rare
# ADS_RARE_store <- list()
# for (i in 1:taxa_levels){
#   ADS_RARE_store[[i]] <-COtables(all_taxa_pooled[[i]], Type="ADS",typem="rare")
# }
#
# #Sample based dominant
# SAM_DOM_store <- list()
# for (i in 1:taxa_levels){
#   SAM_DOM_store[[i]] <-COtables(all_taxa_pooled[[i]], Type="SAM",typem="dominant")
# }
#
# #Sample based rare
# SAM_RARE_store <- list()
# for (i in 1:taxa_levels){
#   SAM_RARE_store[[i]] <-COtables(all_taxa_pooled[[i]], Type="SAM",typem="rare")
# }
truncated.DS.phylum<-COtables(all_taxa_pooled[[1]], Type="ADS",typem="dominant")
truncated.DS.class<-COtables(all_taxa_pooled[[2]], Type="ADS",typem="dominant")
truncated.DS.order<-COtables(all_taxa_pooled[[3]], Type="ADS",typem="dominant")
truncated.DS.family<-COtables(all_taxa_pooled[[4]], Type="ADS",typem="dominant")
truncated.DS.genus<-COtables(all_taxa_pooled[[5]], Type="ADS",typem="dominant")
truncated.DS.species<-COtables(all_taxa_pooled[[6]], Type="ADS",typem="dominant")
truncated.DS.OTUcompleteDS<-COtables(all_taxa_pooled[[7]], Type="ADS",typem="dominant")
View(all_taxa_pooled)
truncated.DS.OTUwholeDS<-COtables(all_taxa_pooled[[8]], Type="ADS",typem="dominant")
corr.all<-cutoff.impact(all_taxa_pooled,Type="ADS",corcoef="spearman",typem="dominant")
corr.all<-cutoff.impact(all_taxa_pooled,Type="ADS",corcoef="spearman",typem="dominant")
View(corr.all)
output.all<-cutoff.impact.fig(corr.all)
View(output.all)
ENV <- data.frame(sample_data(my_phylo))
View(ENV)
#remove first 16 columns
ENV <- ENV[,17:ncol(ENV)]
View(ENV)
#get environmental data from phyloseq object
ENV <- data.frame(sample_data(my_phylo), header=TRUE,row.names=1)
#remove first 16 columns
ENV <- ENV[,17:ncol(ENV)]
#Variation partitioning analysis
VP.1.taxa<-VP.COL(all_taxa_pooled,ENV,Type="ADS",typem="dominant")
View(VP.COL)
#remove first 16 columns
ENV <- ENV[,18:21]
#get environmental data from phyloseq object
ENV <- data.frame(sample_data(my_phylo), header=TRUE,row.names=1)
#remove first 16 columns
ENV <- ENV[,18:21]
#Variation partitioning analysis
VP.1.taxa<-VP.COL(all_taxa_pooled,ENV,Type="ADS",typem="dominant")
ENV<-read.table("env.txt",header=TRUE,row.names=1)
View(ENV)
ENV <- rbind(ENV,ENV,ENV)
ENV<-read.table("env.txt",header=TRUE,row.names=1)
ENV <- rbind(ENV,ENV,ENV,ENV,ENV)
ENV <- ENV[1:75,]
#Variation partitioning analysis
VP.1.taxa<-VP.COL(all_taxa_pooled,ENV,Type="ADS",typem="dominant")
rm(list=ls())
graphics.off()
#load packages
library(vegan)
library(MASS)
#load phyloseq object
ps_pro <- readRDS("../../results/16S/phylo-objects/16S-phyloseq-object-rarefied-decontam.rds")
ps_euk <- readRDS("../results/18S/phylo-objects/18S-phyloseq-object-rarefied.rds")
rm(list=ls())
graphics.off()
#load packages
library(vegan)
library(MASS)
#load phyloseq object
ps_pro <- readRDS("../../results/16S/phylo-objects/16S-phyloseq-object-rarefied-decontam.rds")
ps_euk <- readRDS("../../results/18S/phylo-objects/18S-phyloseq-object-rarefied.rds")
#source our data prep function
source("solman-MultiCoLA-input-file-prep.R")
#source pre-written MultiCoLA functions from Gobet et al
source("taxa.pooler.1.4.r") #step 2.1
source("COtables.1.4.r") #step 2.2
source("cutoff.impact.1.4.r") #step 2.3
source("cutoff.impact.fig.1.4.r") #step 2.4
source("VP.COL.1.4.r") #step 3.1
source("corrcoeff.ENV.1.4.r") #step 3.2
source("signif.1.4.r") #step 3.3
