library(ggplot2) #for making plots
#Plot the fit
ggplot(samp_data_comp, aes(x=log_area, y=log_index)) +
geom_point()+
geom_smooth(method=lm)+
annotate(geom="text", x=3, y=2.5, label=paste0("p=", as.numeric(round(lmp(lm_ISAR), 3)), " z=", as.numeric(round(lm_ISAR$coefficients[2], 3))),
color="red")+
ggtitle("Total Taxa: ASV Richness")
#Plot the fit
ggplot(samp_data_comp, aes(x=log_area, y=log_index)) +
geom_point()+
geom_smooth(method=lm)+
annotate(geom="text", x=3, y=2.5, label=paste0("p=", as.numeric(round(lmp(lm_ISAR), 3)), " z=", as.numeric(round(lm_ISAR$coefficients[2], 3))),
color="red")+
ggtitle("Total Taxa: ASV Richness")+
theme_bw()
#Plot the fit
ggplot(samp_data_comp, aes(x=log_area, y=log_index)) +
geom_point()+
geom_smooth(method=lm)+
annotate(geom="text", x=3, y=2.5, label=paste0("p=", as.numeric(round(lmp(lm_ISAR), 3)), " z=", as.numeric(round(lm_ISAR$coefficients[2], 3))),
color="red")+
ggtitle("Total Taxa ISAR")+
theme_bw()+
ylab(index)+
xlab("Area (cm2)")
#Plot the fit
ggplot(samp_data_comp, aes(x=log_area, y=log_index)) +
geom_point()+
geom_smooth(method=lm)+
annotate(geom="text", x=3, y=2.5, label=paste0("p=", as.numeric(round(lmp(lm_ISAR), 3)), " z=", as.numeric(round(lm_ISAR$coefficients[2], 3))),
color="red")+
ggtitle("Total Taxa ISAR")+
theme_bw()+
ylab(paste0("Log10 ", index))+
xlab("Log10 Area (cm2)")
#Plot the fit
ggplot(samp_data_comp, aes(x=log_area, y=log_index)) +
geom_point()+
geom_smooth(method=lm)+
annotate(geom="text", x=2, y=2.75, label=paste0("p=", as.numeric(round(lmp(lm_ISAR), 3)), " z=", as.numeric(round(lm_ISAR$coefficients[2], 3))),
color="red")+
ggtitle("Total Taxa ISAR")+
theme_bw()+
ylab(paste0("Log10 ", index))+
xlab("Log10 Area (cm2)")
community = "Total"
#Plot the fit
ggplot(samp_data_comp, aes(x=log_area, y=log_index)) +
geom_point()+
geom_smooth(method=lm)+
annotate(geom="text", x=2, y=2.75, label=paste0("p=", as.numeric(round(lmp(lm_ISAR), 3)), " z=", as.numeric(round(lm_ISAR$coefficients[2], 3))),
color="red")+
ggtitle(paste0(community, " Community ISAR"))+
theme_bw()+
ylab(paste0("Log10 ", index))+
xlab("Log10 Area (cm2)")
ISAR_fit_and_plot <- function(phylo, index, community){
#get data
samp_data <- diversity_and_meta(phylo)
data1 <- samp_data[,index]
data2 <- samp_data$Area
samp_data$log_index <- log10(data1)
samp_data$log_area <- log10(data2)
samp_data_comp <- samp_data[complete.cases(samp_data),]
#Linear regression model of richness and area
lm_ISAR <- lm(log_index ~ log_area, data = samp_data_comp)
summary(lm_ISAR) #c = 2.14, z=0.15
#Plot the fit
p <- ggplot(samp_data_comp, aes(x=log_area, y=log_index)) +
geom_point()+
geom_smooth(method=lm)+
annotate(geom="text", x=2, y=2.75, label=paste0("p=", as.numeric(round(lmp(lm_ISAR), 3)), " z=", as.numeric(round(lm_ISAR$coefficients[2], 3))),
color="red")+
ggtitle(paste0(community, " Community ISAR"))+
theme_bw()+
ylab(paste0("Log10 ", index))+
xlab("Log10 Area (cm2)")
return(p)
}
p1 <- ISAR_fit_and_plot(ps, "Observed","Total")
p2 <- ISAR_fit_and_plot(ps, "Shannon","Total")
print(p1)
print(p2)
ISAR_fit_and_plot <- function(phylo, index, community){
#get data
samp_data <- diversity_and_meta(phylo)
data1 <- samp_data[,index]
data2 <- samp_data$Area
samp_data$log_index <- log10(data1)
samp_data$log_area <- log10(data2)
samp_data_comp <- samp_data[complete.cases(samp_data),]
#Linear regression model of richness and area
lm_ISAR <- lm(log_index ~ log_area, data = samp_data_comp)
summary(lm_ISAR) #c = 2.14, z=0.15
#Plot the fit
p <- ggplot(samp_data_comp, aes(x=log_area, y=log_index)) +
geom_point()+
geom_smooth(method=lm)+
annotate(geom="text", label=paste0("p=", as.numeric(round(lmp(lm_ISAR), 3)), " z=", as.numeric(round(lm_ISAR$coefficients[2], 3))),
color="red")+
ggtitle(paste0(community, " Community ISAR"))+
theme_bw()+
ylab(paste0("Log10 ", index))+
xlab("Log10 Area (cm2)")
return(p)
}
p2 <- ISAR_fit_and_plot(ps, "Shannon","Total")
print(p2)
phylo = ps
index = "Observed"
group = 1
community = "Total"
#get data
samp_data <- diversity_and_meta(phylo)
data1 <- samp_data[,index]
data2 <- samp_data$Area
samp_data$log_index <- log10(data1)
samp_data$log_area <- log10(data2)
samp_data_comp <- samp_data[complete.cases(samp_data),]
#Linear regression model of richness and area
lm_ISAR <- lm(log_index ~ log_area, data = samp_data_comp)
summary(lm_ISAR) #c = 2.14, z=0.15
max(log_area)
max(samp_data_comp$log_area)
#Plot the fit
ggplot(samp_data_comp, aes(x=log_area, y=log_index)) +
geom_point()+
geom_smooth(method=lm)+
annotate(geom="text", x = max(samp_data_comp$log_area)/3, y = (max(samp_data_comp$log_index)/3)*2, label=paste0("p=", as.numeric(round(lmp(lm_ISAR), 3)), " z=", as.numeric(round(lm_ISAR$coefficients[2], 3))),
color="red")+
ggtitle(paste0(community, " Community ISAR"))+
theme_bw()+
ylab(paste0("Log10 ", index))+
xlab("Log10 Area (cm2)")
#Plot the fit
ggplot(samp_data_comp, aes(x=log_area, y=log_index)) +
geom_point()+
geom_smooth(method=lm)+
annotate(geom="text", x = max(samp_data_comp$log_area)/2, y = (max(samp_data_comp$log_index)/3)*2, label=paste0("p=", as.numeric(round(lmp(lm_ISAR), 3)), " z=", as.numeric(round(lm_ISAR$coefficients[2], 3))),
color="red")+
ggtitle(paste0(community, " Community ISAR"))+
theme_bw()+
ylab(paste0("Log10 ", index))+
xlab("Log10 Area (cm2)")
#Plot the fit
ggplot(samp_data_comp, aes(x=log_area, y=log_index)) +
geom_point()+
geom_smooth(method=lm)+
annotate(geom="text", x = max(samp_data_comp$log_area)/2, y = max(samp_data_comp$log_index)/2, label=paste0("p=", as.numeric(round(lmp(lm_ISAR), 3)), " z=", as.numeric(round(lm_ISAR$coefficients[2], 3))),
color="red")+
ggtitle(paste0(community, " Community ISAR"))+
theme_bw()+
ylab(paste0("Log10 ", index))+
xlab("Log10 Area (cm2)")
#Plot the fit
ggplot(samp_data_comp, aes(x=log_area, y=log_index)) +
geom_point()+
geom_smooth(method=lm)+
annotate(geom="text", x = max(samp_data_comp$log_area)/2, y = max(samp_data_comp$log_index)*0.75, label=paste0("p=", as.numeric(round(lmp(lm_ISAR), 3)), " z=", as.numeric(round(lm_ISAR$coefficients[2], 3))),
color="red")+
ggtitle(paste0(community, " Community ISAR"))+
theme_bw()+
ylab(paste0("Log10 ", index))+
xlab("Log10 Area (cm2)")
#Plot the fit
ggplot(samp_data_comp, aes(x=log_area, y=log_index)) +
geom_point()+
geom_smooth(method=lm)+
annotate(geom="text", x = max(samp_data_comp$log_area)/2, y = max(samp_data_comp$log_index)*0.85, label=paste0("p=", as.numeric(round(lmp(lm_ISAR), 3)), " z=", as.numeric(round(lm_ISAR$coefficients[2], 3))),
color="red")+
ggtitle(paste0(community, " Community ISAR"))+
theme_bw()+
ylab(paste0("Log10 ", index))+
xlab("Log10 Area (cm2)")
#Plot the fit
ggplot(samp_data_comp, aes(x=log_area, y=log_index)) +
geom_point()+
geom_smooth(method=lm)+
annotate(geom="text", x = max(samp_data_comp$log_area)/2, y = max(samp_data_comp$log_index)*0.95, label=paste0("p=", as.numeric(round(lmp(lm_ISAR), 3)), " z=", as.numeric(round(lm_ISAR$coefficients[2], 3))),
color="red")+
ggtitle(paste0(community, " Community ISAR"))+
theme_bw()+
ylab(paste0("Log10 ", index))+
xlab("Log10 Area (cm2)")
ISAR_fit_and_plot <- function(phylo, index, community){
#get data
samp_data <- diversity_and_meta(phylo)
data1 <- samp_data[,index]
data2 <- samp_data$Area
samp_data$log_index <- log10(data1)
samp_data$log_area <- log10(data2)
samp_data_comp <- samp_data[complete.cases(samp_data),]
#Linear regression model of richness and area
lm_ISAR <- lm(log_index ~ log_area, data = samp_data_comp)
summary(lm_ISAR) #c = 2.14, z=0.15
#Plot the fit
p <- ggplot(samp_data_comp, aes(x=log_area, y=log_index)) +
geom_point()+
geom_smooth(method=lm)+
annotate(geom="text", x = max(samp_data_comp$log_area)/2, y = max(samp_data_comp$log_index)*0.95, label=paste0("p=", as.numeric(round(lmp(lm_ISAR), 3)), " z=", as.numeric(round(lm_ISAR$coefficients[2], 3))),
color="red")+
ggtitle(paste0(community, " Community ISAR"))+
theme_bw()+
ylab(paste0("Log10 ", index))+
xlab("Log10 Area (cm2)")
return(p)
}
p1 <- ISAR_fit_and_plot(ps, "Observed","Total")
print(p1)
print(p2)
phylo = ps
index = "Shannon"
group = 1
community = "Total"
#get data
samp_data <- diversity_and_meta(phylo)
#get data
samp_data <- diversity_and_meta(phylo)
data1 <- samp_data[,index]
data2 <- samp_data$Area
data2 <- samp_data$Area
samp_data$log_index <- log10(data1)
samp_data$log_area <- log10(data2)
samp_data_comp <- samp_data[complete.cases(samp_data),]
#Linear regression model of richness and area
lm_ISAR <- lm(log_index ~ log_area, data = samp_data_comp)
summary(lm_ISAR) #c = 2.14, z=0.15
#Plot the fit
ggplot(samp_data_comp, aes(x=log_area, y=log_index)) +
geom_point()+
geom_smooth(method=lm)+
annotate(geom="text", x = max(samp_data_comp$log_area)/2, y = max(samp_data_comp$log_index)*0.95, label=paste0("p=", as.numeric(round(lmp(lm_ISAR), 3)), " z=", as.numeric(round(lm_ISAR$coefficients[2], 3))),
color="red")+
ggtitle(paste0(community, " Community ISAR"))+
theme_bw()+
ylab(paste0("Log10 ", index))+
xlab("Log10 Area (cm2)")
p2 <- ISAR_fit_and_plot(ps, "Shannon","Total")
print(p2)
ISAR_fit_and_plot <- function(phylo, index, community){
#get data
samp_data <- diversity_and_meta(phylo)
data1 <- samp_data[,index]
data2 <- samp_data$Area
samp_data$log_index <- log10(data1)
samp_data$log_area <- log10(data2)
samp_data_comp <- samp_data[complete.cases(samp_data),]
#Linear regression model of richness and area
lm_ISAR <- lm(log_index ~ log_area, data = samp_data_comp)
summary(lm_ISAR) #c = 2.14, z=0.15
#Plot the fit
ggplot(samp_data_comp, aes(x=log_area, y=log_index)) +
geom_point()+
geom_smooth(method=lm)+
annotate(geom="text", x = max(samp_data_comp$log_area)/2, y = max(samp_data_comp$log_index)*0.95, label=paste0("p=", as.numeric(round(lmp(lm_ISAR), 3)), " z=", as.numeric(round(lm_ISAR$coefficients[2], 3))),
color="red")+
ggtitle(paste0(community, " Community ISAR"))+
theme_bw()+
ylab(paste0("Log10 ", index))+
xlab("Log10 Area (cm2)")
#save plot
pdf(paste0("../../results/16S/graphs/ISAR/", community, "-", index, "-ISAR.pdf"))
print(p)
dev.off()
return(p)
}
p1 <- ISAR_fit_and_plot(ps, "Observed","Total")
ISAR_fit_and_plot <- function(phylo, index, community){
#get data
samp_data <- diversity_and_meta(phylo)
data1 <- samp_data[,index]
data2 <- samp_data$Area
samp_data$log_index <- log10(data1)
samp_data$log_area <- log10(data2)
samp_data_comp <- samp_data[complete.cases(samp_data),]
#Linear regression model of richness and area
lm_ISAR <- lm(log_index ~ log_area, data = samp_data_comp)
summary(lm_ISAR) #c = 2.14, z=0.15
#Plot the fit
p <- ggplot(samp_data_comp, aes(x=log_area, y=log_index)) +
geom_point()+
geom_smooth(method=lm)+
annotate(geom="text", x = max(samp_data_comp$log_area)/2, y = max(samp_data_comp$log_index)*0.95, label=paste0("p=", as.numeric(round(lmp(lm_ISAR), 3)), " z=", as.numeric(round(lm_ISAR$coefficients[2], 3))),
color="red")+
ggtitle(paste0(community, " Community ISAR"))+
theme_bw()+
ylab(paste0("Log10 ", index))+
xlab("Log10 Area (cm2)")
#save plot
pdf(paste0("../../results/16S/graphs/ISAR/", community, "-", index, "-ISAR.pdf"))
print(p)
dev.off()
return(p)
}
p1 <- ISAR_fit_and_plot(ps, "Observed","Total")
ISAR_fit_and_plot(ps, "Observed","Total")
ISAR_fit_and_plot(ps, "Observed","Total")
ISAR_fit_and_plot(ps, "Shannon","Total")
ISAR_fit_and_plot(ps.abun, "Observed","Abundant")
ISAR_fit_and_plot(ps.abun, "Shannon","Abundant")
ISAR_fit_and_plot(ps.int, "Observed","Intermediate")
ISAR_fit_and_plot(ps.int, "Shannon","Intermediate")
ISAR_fit_and_plot(ps.rare, "Observed","Rare")
ISAR_fit_and_plot(ps.rare, "Shannon","Rare")
plot(samp_data$Area, samp_data$Observed)
plot(log(samp_data$Area), samp_data$Observed)
plot(log(samp_data$Area), log(samp_data$Observed))
lm(log(samp_data$Area) ~ log(samp_data$Observed))
lm_res <- lm(log(samp_data$Area) ~ log(samp_data$Observed))
summary(lm_res)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls())
graphics.off()
# library(ggpubr) #for making my boxplots
# library(FSA) #for dunn's test
# library(vegan) #for diversity indices
library(ggplot2) #for making plots
library(dplyr) #for manipulating data where you see %>% and computing summary stats and coalesce function
# install.packages("dendextend")
# library(dendextend) #for hierchical clustering
# install.packages("indicspecies")
# library(indicspecies) #for indicator species analysis
#TOTAL DATASET
ps <- readRDS("../../results/18S/phylo-objects/18S-phyloseq-object-rarefied.rds")
#Total Abundant
ps.abun <- readRDS("../../results/18S/phylo-objects/18S-total-abundant.rds")
#Total Intermediate
ps.int <- readRDS("../../results/18S/phylo-objects/18S-total-intermediate.rds")
#Total Rare
ps.rare <- readRDS("../../results/18S/phylo-objects/18S-total-rare.rds")
#Function testing area
# phylo = ps
# index = "Observed"
# group = 1
# data <- diversity_and_meta(ps)
diversity_and_meta <- function(phylo){
#Get metadata of samples
samp_data <- data.frame(sample_data(phylo))
#list of variables we're interested in
keeps <- c("SampleID", "Name", "Glacier", "Pole", "Radius", "EW", "NS")
samp_data <- samp_data[ , (names(samp_data) %in% keeps)]
#get cryoconite hole areas
area1 <- pi*samp_data$Radius^2
area2 <- pi*(samp_data$NS/2)*(samp_data$EW/2)
samp_data$Area <- coalesce(area1,area2)
drops <- c("EW", "NS", "Radius")
samp_data <- samp_data[ , !(names(samp_data) %in% drops)]
#Get diversity data
Observed <- estimate_richness(phylo, measures=c("Observed"))
Shannon <- estimate_richness(phylo, measures=c("Shannon"))
samp_data$Observed <- Observed$Observed
samp_data$Shannon <- Shannon$Shannon
#make sure data are numeric
samp_data[5:7] <- data.frame(lapply(samp_data[5:7],as.numeric))
#change sample names
names(samp_data) <- c("SampleID", "Name", "Glacier", "Pole", "Area", "Observed","Shannon")
return(samp_data)
}
#Function testing area
# phylo = ps
# index = "Shannon"
# group = 1
# community = "Total"
# ISAR_plot <- ISAR_fit_and_plot()
ISAR_fit_and_plot <- function(phylo, index, community){
#get data
samp_data <- diversity_and_meta(phylo)
data1 <- samp_data[,index]
data2 <- samp_data$Area
samp_data$log_index <- log10(data1)
samp_data$log_area <- log10(data2)
samp_data_comp <- samp_data[complete.cases(samp_data),]
#Linear regression model of richness and area
lm_ISAR <- lm(log_index ~ log_area, data = samp_data_comp)
summary(lm_ISAR) #c = 2.14, z=0.15
#Plot the fit
p <- ggplot(samp_data_comp, aes(x=log_area, y=log_index)) +
geom_point()+
geom_smooth(method=lm)+
annotate(geom="text", x = max(samp_data_comp$log_area)/2, y = max(samp_data_comp$log_index)*0.95, label=paste0("p=", as.numeric(round(lmp(lm_ISAR), 3)), " z=", as.numeric(round(lm_ISAR$coefficients[2], 3))),
color="red")+
ggtitle(paste0(community, " Community ISAR"))+
theme_bw()+
ylab(paste0("Log10 ", index))+
xlab("Log10 Area (cm2)")
#save plot
pdf(paste0("../../results/18S/graphs/ISAR/", community, "-", index, "-ISAR.pdf"))
print(p)
dev.off()
return(p)
}
ISAR_fit_and_plot(ps, "Observed","Total")
lmp <- function (modelobject) {
if (class(modelobject) != "lm") stop("Not an object of class 'lm' ")
f <- summary(modelobject)$fstatistic
p <- pf(f[1],f[2],f[3],lower.tail=F)
attributes(p) <- NULL
return(p)
}
ISAR_fit_and_plot(ps, "Observed","Total")
ISAR_fit_and_plot(ps, "Shannon","Total")
ISAR_fit_and_plot(ps.abun, "Observed","Abundant")
ISAR_fit_and_plot(ps.abun, "Shannon","Abundant")
ISAR_fit_and_plot(ps.int, "Observed","Intermediate")
ISAR_fit_and_plot(ps.int, "Shannon","Intermediate")
ISAR_fit_and_plot(ps.rare, "Observed","Rare")
ISAR_fit_and_plot(ps.rare, "Shannon","Rare")
rm(list=ls())
graphics.off()
# library(ggpubr) #for making my boxplots
# library(FSA) #for dunn's test
# library(vegan) #for diversity indices
library(ggplot2) #for making plots
library(dplyr) #for manipulating data where you see %>% and computing summary stats and coalesce function
# install.packages("dendextend")
# library(dendextend) #for hierchical clustering
# install.packages("indicspecies")
# library(indicspecies) #for indicator species analysis
#TOTAL DATASET
ps <- readRDS("../../results/16S/phylo-objects/16S-phyloseq-object-rarefied-decontam.rds")
#Total Abundant
ps.abun <- readRDS("../../results/16S/phylo-objects/16S-total-abundant.rds")
#Total Intermediate
ps.int <- readRDS("../../results/16S/phylo-objects/16S-total-intermediate.rds")
#Total Rare
ps.rare <- readRDS("../../results/16S/phylo-objects/16S-total-rare.rds")
lmp <- function (modelobject) {
if (class(modelobject) != "lm") stop("Not an object of class 'lm' ")
f <- summary(modelobject)$fstatistic
p <- pf(f[1],f[2],f[3],lower.tail=F)
attributes(p) <- NULL
return(p)
}
#Function testing area
# phylo = ps
# index = "Observed"
# group = 1
# data <- diversity_and_meta(ps)
diversity_and_meta <- function(phylo){
#Get metadata of samples
samp_data <- data.frame(sample_data(phylo))
#list of variables we're interested in
keeps <- c("SampleID", "Name", "Glacier", "Pole", "Radius", "EW", "NS")
samp_data <- samp_data[ , (names(samp_data) %in% keeps)]
#get cryoconite hole areas
area1 <- pi*samp_data$Radius^2
area2 <- pi*(samp_data$NS/2)*(samp_data$EW/2)
samp_data$Area <- coalesce(area1,area2)
drops <- c("EW", "NS", "Radius")
samp_data <- samp_data[ , !(names(samp_data) %in% drops)]
#Get diversity data
Observed <- estimate_richness(phylo, measures=c("Observed"))
Shannon <- estimate_richness(phylo, measures=c("Shannon"))
samp_data$Observed <- Observed$Observed
samp_data$Shannon <- Shannon$Shannon
#make sure data are numeric
samp_data[5:7] <- data.frame(lapply(samp_data[5:7],as.numeric))
#change sample names
names(samp_data) <- c("SampleID", "Name", "Glacier", "Pole", "Area", "Observed","Shannon")
return(samp_data)
}
my_data <- diversity_and_meta(ps)
lm(log10(Observeds) ~ log10(Area), data = my_data)
lm(log10(Observed) ~ log10(Area), data = my_data)
my1 <- lm(log10(Observed) ~ log10(Area), data = my_data)
ggplot(my_data, aes(x=log10(Area), y=log10(Observed))) +
geom_point()+
geom_smooth(method=lm)+
annotate(geom="text", x = max(samp_data_comp$log_area)/2, y = max(samp_data_comp$log_index)*0.95, label=paste0("p=", as.numeric(round(lmp(lm_ISAR), 3)), " z=", as.numeric(round(lm_ISAR$coefficients[2], 3))),
color="red")+
ggtitle(paste0(community, " Community ISAR"))+
theme_bw()+
ylab(paste0("Log10 ", index))+
xlab("Log10 Area (cm2)")
lm1 <- lm(log10(Observed) ~ log10(Area), data = my_data)
ggplot(my_data, aes(x=log10(Area), y=log10(Observed))) +
geom_point()+
geom_smooth(method=lm)+
annotate(geom="text", x = 1, y = 2, label=paste0("p=", as.numeric(round(lmp(lm1), 3)), " z=", as.numeric(round(lm1$coefficients[2], 3))),
color="red")+
ggtitle(paste0(community, " Community ISAR"))+
theme_bw()+
ylab("Log10 Observed")+
xlab("Log10 Area (cm2)")
ggplot(my_data, aes(x=log10(Area), y=log10(Observed))) +
geom_point()+
geom_smooth(method=lm)+
annotate(geom="text", x = 1, y = 2, label=paste0("p=", as.numeric(round(lmp(lm1), 3)), " z=", as.numeric(round(lm1$coefficients[2], 3))),
color="red")+
ggtitle("TotalCommunity ISAR")+
theme_bw()+
ylab("Log10 Observed")+
xlab("Log10 Area (cm2)")
ggplot(my_data, aes(x=log10(Area), y=log10(Observed))) +
geom_point()+
geom_smooth(method=lm)+
annotate(geom="text", x = 2, y = 2, label=paste0("p=", as.numeric(round(lmp(lm1), 3)), " z=", as.numeric(round(lm1$coefficients[2], 3))),
color="red")+
ggtitle("TotalCommunity ISAR")+
theme_bw()+
ylab("Log10 Observed")+
xlab("Log10 Area (cm2)")
ggplot(my_data, aes(x=Area, y=Observed)) +
geom_point()+
geom_smooth(method=lm)+
annotate(geom="text", x = 2, y = 2, label=paste0("p=", as.numeric(round(lmp(lm1), 3)), " z=", as.numeric(round(lm1$coefficients[2], 3))),
color="red")+
ggtitle("TotalCommunity ISAR")+
theme_bw()+
ylab("Log10 Observed")+
xlab("Log10 Area (cm2)")
