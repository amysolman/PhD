{\rtf1\ansi\ansicpg1252\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Oblique;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww19240\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 #Use Trimmomatic to remove adapters and low quality reads\
#The following is notes on installing and running Trimmomatic via condo\
#If you want to create and activate a new conda environment\
\
\pard\pardeftab720\partightenfactor0
\cf0 \expnd0\expndtw0\kerning0
#check conda is up to date \
conda update conda \
conda update -n base -c conda-forge conda \
\
#install trimmomatic \
conda install -c bioconda trimmomatic\
\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 #Trimming depends on what you want to do with your sequences next. DADA2 requires reads of the same length so you will want to trim them by length.\
#The current trimming steps are:\
\pard\tx220\tx720\pardeftab720\li720\fi-720\partightenfactor0
\ls1\ilvl0\cf0 \kerning1\expnd0\expndtw0 #\expnd0\expndtw0\kerning0
ILLUMINACLIP: Cut adapter and other illumina-specific sequences from the read.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 #\expnd0\expndtw0\kerning0
SLIDINGWINDOW: Perform a sliding window trimming, cutting once the average quality within the window falls below a threshold.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 #\expnd0\expndtw0\kerning0
LEADING: Cut bases off the start of a read, if below a threshold quality\
\ls1\ilvl0\kerning1\expnd0\expndtw0 #\expnd0\expndtw0\kerning0
TRAILING: Cut bases off the end of a read, if below a threshold quality\
\ls1\ilvl0\kerning1\expnd0\expndtw0 #\expnd0\expndtw0\kerning0
CROP: Cut the read to a specified length\
\ls1\ilvl0\kerning1\expnd0\expndtw0 #\expnd0\expndtw0\kerning0
HEADCROP: Cut the specified number of bases from the start of the read\
\ls1\ilvl0\kerning1\expnd0\expndtw0 #\expnd0\expndtw0\kerning0
MINLEN: Drop the read if it is below a specified length\
\ls1\ilvl0\kerning1\expnd0\expndtw0 #\expnd0\expndtw0\kerning0
TOPHRED33: Convert quality scores to Phred-33\
\ls1\ilvl0\kerning1\expnd0\expndtw0 #\expnd0\expndtw0\kerning0
TOPHRED64: Convert quality scores to Phred-64\
\pard\tx720\pardeftab720\partightenfactor0
\cf0 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 #Looking at the multiQC report my parameters will be:\
#
\f1\i LEADING:10
\f0\i0 \
#
\f1\i TRAILING:20
\f0\i0 \
\pard\pardeftab720\sa240\partightenfactor0

\f1\i \cf0 #SLIDINGWINDOW:4:20
\f0\i0 \

\f1\i #MINLEN:50.
\f0\i0 \
#A note on the four output files (not including the log). When reads are quality trimmed a paired read can be lost so you end up with only one remaining (unpaired) read. There will be more unpaired forward than reverse reads due to the poorer quality of the reverse read. Similar results can be achieved with Cutadapt as with Trimmomatic, however Cutadapt outputs paired reads only.\
#There is no batch mode in Trimmomatic so a loop is needed.\
\pard\pardeftab720\partightenfactor0
\cf0 #RUN TRIMMOMATIC ON ALL READS \
for file in Fastq-files/*R1_001.fastq.gz; \
do R1="$\{file:12:15\}_R1_001.fastq.gz"; \
R2="$\{file:12:15\}_R2_001.fastq.gz"; \
R3="$\{file:12:6\}"; R4="$\{file:12:6\}"; \
echo "$R1" \
echo "$R2" \
trimmomatic PE Fastq-files/"$R1" Fastq-files/"$R2" Fastq-trimmed/"$\{R3\}_forward_paired.fastq.gz" Fastq-trimmed/"$\{R3\}_forward_unpaired.fastq.gz" Fastq-trimmed/"$\{R4\}_reverse_paired.fastq.gz" Fastq-trimmed/"$\{R4\}_reverse_unpaired.fastq.gz" LEADING:10 TRAILING:20 SLIDINGWINDOW:4:20 MINLEN:50 done\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \
}