xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
guides(color=guide_legend(override.aes=list(shape=c(21,24), size=6, stroke=2)))+
scale_shape_manual(values = c(21,24))+
theme_bw()+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size=10),
legend.title=element_blank(),
legend.text = element_text(size=15),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
strip.text = element_text(size=15))
#save the plot
pdf("../results/qPCR-plot2.pdf", height=5, width=15)
print(p2)
dev.off()
p2 = ggplot(df2) +
geom_point(aes(Sample, log10(Gene.Copies.Per.mL.mg), color = Treatment, shape = Treatment, stroke=2), size=6) +
ylab("log10 Gene Copies per mL/mg")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
guides(color=guide_legend(override.aes=list(shape=c(21,24), size=6, stroke=2)))+
scale_shape_manual(values = c(21,24))+
theme_bw()+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size=10),
legend.title=element_blank(),
legend.text = element_text(size=15),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
strip.text = element_text(size=15))
#save the plot
pdf("../results/qPCR-plot2.pdf", height=5, width=15)
print(p2)
dev.off()
View(df)
p = ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log10(Gene.Copies.Per.mL.mg), color = Treatment, shape = Treatment, stroke=2), size=6) +
ylab("log10 Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
facet_wrap(~Sample, scales="free")+
guides(color=guide_legend(override.aes=list(shape=c(21,24), size=6, stroke=2)))+
scale_shape_manual(values = c(21,24))+
theme_bw()+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size=10),
legend.title=element_blank(),
legend.text = element_text(size=15),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
strip.text = element_text(size=15))
p
p = ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log10(Gene.Copies.Per.mL.mg), color = Treatment, shape = Treatment, stroke=2), size=6) +
ylab("log10 Gene Copies per mL/g")+
xlab("Sample")+
#facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
facet_wrap(~Sample+Habitat, scales="free")+
guides(color=guide_legend(override.aes=list(shape=c(21,24), size=6, stroke=2)))+
scale_shape_manual(values = c(21,24))+
theme_bw()+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size=10),
legend.title=element_blank(),
legend.text = element_text(size=15),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
strip.text = element_text(size=15))
p
View(df)
p = ggplot(df) +
geom_point(aes(Sample, log10(Gene.Copies.Per.mL.mg), fill=Sample.Name.To.Plot, color = Treatment, shape = Treatment, stroke=2), size=6) +
ylab("log10 Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
#facet_wrap(~Sample+Habitat, scales="free")+
guides(color=guide_legend(override.aes=list(shape=c(21,24), size=6, stroke=2)))+
scale_shape_manual(values = c(21,24))+
theme_bw()+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size=10),
legend.title=element_blank(),
legend.text = element_text(size=15),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
strip.text = element_text(size=15))
p
p3 = ggplot(df) +
geom_point(aes(Sample, log10(Gene.Copies.Per.mL.mg), fill=Sample.Name.To.Plot, color = Treatment, shape = Treatment, stroke=2), size=6) +
ylab("log10 Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
#facet_wrap(~Sample+Habitat, scales="free")+
guides(color=guide_legend(override.aes=list(shape=c(21,24), size=6, stroke=2)))+
scale_shape_manual(values = c(21,24))+
theme_bw()+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size=10),
legend.title=element_blank(),
legend.text = element_text(size=15),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
strip.text = element_text(size=15))
p3
#save the plot
pdf("../results/qPCR-plot3.pdf", height=5, width=15)
print(p3)
dev.off()
p3 = ggplot(df) +
geom_point(aes(Sample, log10(Gene.Copies.Per.mL.mg), color = Treatment, shape = Treatment, stroke=2), size=6) +
ylab("log10 Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
#facet_wrap(~Sample+Habitat, scales="free")+
guides(color=guide_legend(override.aes=list(shape=c(21,24), size=6, stroke=2)))+
scale_shape_manual(values = c(21,24))+
theme_bw()+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size=10),
legend.title=element_blank(),
legend.text = element_text(size=15),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
strip.text = element_text(size=15))
p3
#save the plot
pdf("../results/qPCR-plot3.pdf", height=5, width=15)
print(p3)
dev.off()
p3 = ggplot(df) +
geom_point(aes(Sample, log10(Gene.Copies.Per.mL.mg), color = Treatment, shape = Treatment, stroke=2), size=6) +
ylab("log10 Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
#facet_wrap(~Sample+Habitat, scales="free")+
guides(color=guide_legend(override.aes=list(shape=c(21,21), size=6, stroke=2)))+
scale_shape_manual(values = c(21,21), size=4)+
theme_bw()+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size=10),
legend.title=element_blank(),
legend.text = element_text(size=15),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
strip.text = element_text(size=15))
p3 = ggplot(df) +
geom_point(aes(Sample, log10(Gene.Copies.Per.mL.mg), color = Treatment, shape = Treatment, stroke=2), size=4) +
ylab("log10 Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
#facet_wrap(~Sample+Habitat, scales="free")+
guides(color=guide_legend(override.aes=list(shape=c(21,21), size=6, stroke=2)))+
scale_shape_manual(values = c(21,21))+
theme_bw()+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size=10),
legend.title=element_blank(),
legend.text = element_text(size=15),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
strip.text = element_text(size=15))
p3
#save the plot
pdf("../results/qPCR-plot3.pdf", height=5, width=15)
print(p3)
dev.off()
p3 = ggplot(df) +
geom_point(aes(Sample, Gene.Copies.Per.mL.mg, color = Treatment, shape = Treatment, stroke=2), size=4) +
ylab("log10 Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
#facet_wrap(~Sample+Habitat, scales="free")+
guides(color=guide_legend(override.aes=list(shape=c(21,21), size=6, stroke=2)))+
scale_shape_manual(values = c(21,21))+
theme_bw()+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size=10),
legend.title=element_blank(),
legend.text = element_text(size=15),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
strip.text = element_text(size=15))
p3
#save the plot
pdf("../results/qPCR-plot3.pdf", height=5, width=15)
print(p3)
dev.off()
p3 = ggplot(df) +
geom_point(aes(Sample, log10(Gene.Copies.Per.mL.mg), fill=Sample.Name.To.Plot, color = Treatment, shape = Treatment, stroke=2), size=4) +
ylab("log10 Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
#facet_wrap(~Sample+Habitat, scales="free")+
guides(color=guide_legend(override.aes=list(shape=c(21,21), size=6, stroke=2)))+
scale_shape_manual(values = c(21,21))+
theme_bw()+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size=10),
legend.title=element_blank(),
legend.text = element_text(size=15),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
strip.text = element_text(size=15))
p3
#save the plot
pdf("../results/qPCR-plot3.pdf", height=5, width=15)
print(p3)
dev.off()
p3 = ggplot(df) +
geom_point(aes(Sample, log10(Gene.Copies.Per.mL.mg), fill=Sample.Name.To.Plot, stroke=2), size=4) +
ylab("log10 Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
#facet_wrap(~Sample+Habitat, scales="free")+
guides(color=guide_legend(override.aes=list(shape=c(21,21), size=6, stroke=2)))+
scale_shape_manual(values = c(21,21))+
theme_bw()+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size=10),
legend.title=element_blank(),
legend.text = element_text(size=15),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
strip.text = element_text(size=15))
p3
p3 = ggplot(df) +
geom_point(aes(Sample, log10(Gene.Copies.Per.mL.mg), fill=Sample.Name.To.Plot,
fill = Sample.Name.To.Plot, color = Sample.Name.To.Plot, group = interaction(log10(Gene.Copies.Per.mL.mg), Sample.Name.To.Plot),
stroke=2), size=4) +
ylab("log10 Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
#facet_wrap(~Sample+Habitat, scales="free")+
guides(color=guide_legend(override.aes=list(shape=c(21,21), size=6, stroke=2)))+
scale_shape_manual(values = c(21,21))+
theme_bw()+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size=10),
legend.title=element_blank(),
legend.text = element_text(size=15),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
strip.text = element_text(size=15))
p3
rm(list=ls())
graphics.off()
#load packages
library(ggplot2)
library(PairedData)
library(dplyr)
#load data
df = read.csv("../data/meta_qpcr_res.csv", sep="\t")
df2 = read.csv("../data/qPCR-mean.csv", sep="\t")
#set the habitat order
df$Habitat = factor(df$Habitat, levels=c("Snow", "Spring Ice", "Summer Ice", "Cryoconite", "Control"))
df2$Habitat = factor(df2$Habitat, levels=c("Snow", "Spring Ice", "Summer Ice", "Cryoconite", "Control"))
p = ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log10(Gene.Copies.Per.mL.mg), color = Treatment, shape = Treatment, stroke=2), size=6) +
ylab("log10 Gene Copies per mL or g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
guides(color=guide_legend(override.aes=list(shape=c(21,24), size=6, stroke=2)))+
scale_shape_manual(values = c(21,24))+
theme_bw()+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size=10),
legend.title=element_blank(),
legend.text = element_text(size=15),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
strip.text = element_text(size=15))
#save the plot
pdf("../results/qPCR-plot.pdf", height=5, width=15)
print(p)
dev.off()
?log
#remove the anomolous result
df = df[df$Sample != "S21.30",]
p = ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log10(Gene.Copies.Per.mL.mg), color = Treatment, shape = Treatment, stroke=2), size=6) +
ylab("log10 Gene Copies per mL or g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
guides(color=guide_legend(override.aes=list(shape=c(21,24), size=6, stroke=2)))+
scale_shape_manual(values = c(21,24))+
theme_bw()+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size=10),
legend.title=element_blank(),
legend.text = element_text(size=15),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
strip.text = element_text(size=15))
#save the plot
pdf("../results/qPCR-plot.pdf", height=5, width=15)
print(p)
dev.off()
p2 = ggplot(df2) +
geom_point(aes(Sample, log10(Gene.Copies.Per.mL.mg), color = Treatment, shape = Treatment, stroke=2), size=6) +
ylab("log10 Gene Copies per mL or mg")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
guides(color=guide_legend(override.aes=list(shape=c(21,24), size=6, stroke=2)))+
scale_shape_manual(values = c(21,24))+
theme_bw()+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size=10),
legend.title=element_blank(),
legend.text = element_text(size=15),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
strip.text = element_text(size=15))
#save the plot
pdf("../results/qPCR-plot2.pdf", height=5, width=15)
print(p2)
dev.off()
# Subset gene data without treatment
tdna <- subset(df2,  Treatment == "tDNA", Gene.Copies.Per.mL.mg,
drop = TRUE)
# subset gene data with treatment
idna <- subset(df2,  Treatment == "iDNA", Gene.Copies.Per.mL.mg,
drop = TRUE)
# Plot paired data
pd <- paired(tdna, idna)
plot(pd, type = "profile") + theme_bw()
#basic stats
group_by(df2, Treatment, Habitat) %>%
summarise(
count = n(),
mean = mean(Gene.Copies.Per.mL.mg, na.rm = TRUE),
median = median(Gene.Copies.Per.mL.mg, na.rm = TRUE),
IQR = IQR(Gene.Copies.Per.mL.mg, na.rm = TRUE)
)
View(df2)
#remove anomolous result
df2 = df2[df2$Sample != "S21.30",]
# compute the difference
d <- with(df2,
Gene.Copies.Per.mL.mg[Treatment == "tDNA"] - Gene.Copies.Per.mL.mg[Treatment == "iDNA"])
# Shapiro-Wilk normality test for the differences
shapiro.test(d) # => p-value < 0.05 so the data is not normally distributed
#nonparametric paired sample Wilcoxon test
wilcox.test(Gene.Copies.Per.mL.mg ~ Treatment, data = df2, paired = TRUE) #no significant difference between
#what does this look like per group?
sn <- wilcox.test(Gene.Copies.Per.mL.mg ~ Treatment, data = df2[df2$Habitat == "Snow",], paired = TRUE)
sn
sp <- wilcox.test(Gene.Copies.Per.mL.mg ~ Treatment, data = df2[df2$Habitat == "Spring Ice",], paired = TRUE)
sp
sm <- wilcox.test(Gene.Copies.Per.mL.mg ~ Treatment, data = df2[df2$Habitat == "Summer Ice",], paired = TRUE)
sm
cr <- wilcox.test(Gene.Copies.Per.mL.mg ~ Treatment, data = df2[df2$Habitat == "Cryoconite",], paired = TRUE)
cr
#what happens if we test spring and summer samples separately?
#nonparametric paired sample Wilcoxon test
wilcox.test(Gene.Copies.Per.mL.mg ~ Treatment, data = df[df$Season == "Spring",], paired = TRUE)
wilcox.test(Gene.Copies.Per.mL.mg ~ Treatment, data = df[df$Season == "Summer",], paired = TRUE)
#Spring
x = df[df$Season == "Spring" & df$Treatment == "iDNA",]
y = df[df$Season == "Spring" & df$Treatment == "tDNA",]
wilcox.test(x$Gene.Copies.Per.mL.mg, y$Gene.Copies.Per.mL.mg, paired = TRUE)
#Summer
x = df[df$Season == "Summer" & df$Treatment == "iDNA",]
y = df[df$Season == "Summer" & df$Treatment == "tDNA",]
wilcox.test(x$Gene.Copies.Per.mL.mg, y$Gene.Copies.Per.mL.mg, paired = TRUE, alternative = "less")
#test for differences between individual pairs
data = df[df$Sample == "S21.29",]
x = data[data$Treatment == "iDNA",]
y = data[data$Treatment == "tDNA",]
wilcox.test(x$Gene.Copies.Per.mL.mg, y$Gene.Copies.Per.mL.mg, paired = TRUE)
View(df)
log10(200000000)
p = ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log10(Gene.Copies.Per.mL.mg), color = Treatment, shape = Treatment, stroke=2), size=4) +
ylab("log10 Gene Copies per mL or g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
guides(color=guide_legend(override.aes=list(shape=c(21,21), size=4, stroke=2)))+
scale_shape_manual(values = c(21,21))+
theme_bw()+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size=10),
legend.title=element_blank(),
legend.text = element_text(size=15),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
strip.text = element_text(size=15))
#save the plot
pdf("../results/qPCR-plot.pdf", height=5, width=15)
print(p)
dev.off()
View(df)
###################What proportion of reads from each sample was from tDNA and iDNA??????
#group by sample and treatment
#subtract iDNA reads from tDNA reads
df.p = df %>%
group_by(Sample, Treatment)
View(df.p)
###################What proportion of reads from each sample was from tDNA and iDNA??????
#group by sample and treatment
#subtract iDNA reads from tDNA reads
df.p = df %>%
group_by(Sample, Treatment) %>%
summarise(reads = sum(Gene.Copies.Per.mL.mg))
View(df.p)
unique(df.p$Sample)
i = 1
for (i in 1:unique(df.p$Sample)){
data = df.p[df.p$Sample == i,]
print(data)
}
for (i in 1:length(unique(df.p$Sample))){
samps = unique(df.p$Sample)
data = df.p[df.p$Sample == samps[i],]
print(data)
}
data
data[1]
data[2]
data[3]
data[3][2]
as.vector(data)
dif = data$reads[2] = data$reads[1]
dif = as.vector()
dif = vector()
for (i in 1:length(unique(df.p$Sample))){
samps = unique(df.p$Sample)
data = df.p[df.p$Sample == samps[i],]
print(data)
dif[1] = data$reads[2] - data$reads[1]
}
dif = vector()
for (i in 1:length(unique(df.p$Sample))){
samps = unique(df.p$Sample)
data = df.p[df.p$Sample == samps[i],]
print(data)
dif[i] = data$reads[2] - data$reads[1]
}
dif
prop = data$reads[1] / data$reads[2]
dif = vector()
pro = vector()
for (i in 1:length(unique(df.p$Sample))){
samps = unique(df.p$Sample)
data = df.p[df.p$Sample == samps[i],]
print(data)
dif[i] = data$reads[2] - data$reads[1]
prop[i] = data$reads[1] / data$reads[2]
}
x = cbind(unique(df.p$Sample), dif, pro)
View(x)
x = cbind(unique(df.p$Sample), dif, prop)
library(reshape)
#into wide format
reshape(df.p, idvar = "Sample", timevar = "reads", direction = "wide")
?resha[e]
?reshape
#into wide format
reshape(df.p, idvar = "Sample", timevar = "Treatment", direction = "wide")
p = ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log10(Gene.Copies.Per.mL.mg), color = Treatment, shape = Treatment, stroke=2), size=4) +
ylab("log10 Gene Copies per mL or mg")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
guides(color=guide_legend(override.aes=list(shape=c(21,21), size=4, stroke=2)))+
scale_shape_manual(values = c(21,21))+
theme_bw()+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5, size=10),
legend.title=element_blank(),
legend.text = element_text(size=15),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
strip.text = element_text(size=15))
#save the plot
pdf("../results/qPCR-plot.pdf", height=5, width=15)
print(p)
dev.off()
setwd("~/Documents/GitHub/PhD/2023-Active-and-dormant/metatranscriptomics/code")
# 1. Clear workspace and load packages
rm(list=ls())
graphics.off()
library(phyloseq)
library(RColorBrewer)
library(tidyr)
library(ggplot2)
#library(vegan)
#source("00-solman-functions.R")
# library(BiodiversityR) #for rank abundance curves
library(dplyr)
library(cowplot)
library(reshape)
library(funrar) #for make relative
library(stringr) #mutate function
library(gridExtra) #for exporting as pdf
library(scales)
# devtools::install_github("gmteunisse/fantaxtic")
require("fantaxtic")
library(tidyverse)
library(patchwork)
library(ggpubr)
library(plyr)
library(zoo)
#prokaryotes
pro.DNA <- readRDS("../results/16S-phylo-object.rds")
pro.DNA <- readRDS("../results/16S-phylo-object.rds")
pro.RNA <- readRDS("../results/mt-pro-phylo-object.rds")
#eukaryotes without micrometazoans
euk.DNA <- readRDS("../results/18S-phylo-object-micro-keep.rds")
euk.RNA <- readRDS("../results/mt-euk-phylo-object.rds")
pro.cols <- read.csv("../results/thesis-plotting-colours-prokaryotes.csv")
euk.cols <- read.csv("../results/thesis-plotting-colours-eukaryotes.csv")
