dev.off()
#Plot mean log10 gene copies mL-1 for each sample (using diluted and undiluted samples) against the log10 difference between diluted/undiluted samples to see if there is an increase/decrease in difference (i.e. inhibition) with log10 gene copies mL-1.
data_wide$Dif = data_wide$Undiluted - data_wide$Diluted
View(data_wide)
#get mean values for each sample
data.sum2 = data.unknown %>%
group_by(R_Names, `Sample Name`) %>%
summarise(Mean = mean(NormDilution, na.rm=TRUE),
log10Mean = log10(mean(NormDilution, na.rm=TRUE)),
SD = sd(NormDilution, na.rm=TRUE))
View(data.sum2)
#Calculate mean log10 gene copies mL-1 for each sample using normalised diluted and undiluted samples.
#get mean values for each sample
data.sum2 = data.unknown %>%
group_by(R_Names) %>%
summarise(Mean = mean(NormDilution, na.rm=TRUE),
log10Mean = log10(mean(NormDilution, na.rm=TRUE)),
SD = sd(NormDilution, na.rm=TRUE))
View(data.sum2)
View(data.sum)
#make dataset wide for calculating differences
data_wide2 <- spread(data.sum[,-c(3,5,6)], Dilution, Mean)
View(data_wide2)
data_wide2$Dif = data_wide2$Undiluted - data_wide2$Diluted
data_wide2$log10Dif = log10(data_wide2$Dif)
View(data_wide2)
data_wide2$Dif = data_wide2$Diluted - data_wide2$undiluted
data_wide2$Dif = data_wide2$Diluted - data_wide2$Undiluted
data_wide2$log10Undiluted = log10(data_wide2$Undiluted)
data_wide2$log10Diluted = log10(data_wide2$Diluted)
data_wide2$log10Dif = data_wide2$log10Diluted - data_wide2$log10Undiluted
View(data_wide2)
#plot
data_wide2$TotalMean = data.sum2$log10Mean
#plot
data_wide2$log10TotalMean = data.sum2$log10Mean
p2 = ggplot(data_wide2, aes(x=log10TotalMean, y=log10Dif)) +
geom_point(size=6) +
#geom_abline(slope=1, intercept = 0)+
theme_bw()
p2
p2 = ggplot(data_wide2, aes(x=log10TotalMean, y=log10Dif)) +
geom_point(size=6) +
geom_hline(yintercept=0)
theme_bw()
p2
#mean difference
mean_dif = mean(data_wide2$log10Dif)
p2 = ggplot(data_wide2, aes(x=log10TotalMean, y=log10Dif)) +
geom_point(size=4) +
geom_hline(yintercept=0)+
geom_hline(yintercept=mean_dif)+
theme_bw()
p2
p2 = ggplot(data_wide2, aes(x=log10TotalMean, y=log10Dif)) +
geom_point(size=4) +
geom_hline(yintercept=0)+
geom_hline(yintercept=mean_dif, linetype="dashed", color = "red")+
theme_bw()
p2
p2 = ggplot(data_wide2, aes(x=log10TotalMean, y=log10Dif)) +
geom_point(size=4) +
geom_hline(yintercept=0)+
geom_hline(yintercept=mean_dif, linetype="dashed", color = "red")+
theme_bw()+
xlab(expression(paste("Mean log"[10]," DNA quantified by undiluted and diluted qPCR")))+
ylab(expression(paste("Difference in Log"[10]," DNA quantity (16S rRNA gene copies per mL/mg)")))
p2
p2 = ggplot(data_wide2, aes(x=log10TotalMean, y=log10Dif)) +
geom_point(size=4) +
geom_hline(yintercept=0)+
geom_hline(yintercept=mean_dif, linetype="dashed", color = "red")+
theme_bw()+
xlab(expression(paste("Mean log"[10]," DNA quantified by undiluted and diluted qPCR")))+
ylab(expression(paste("Difference in Log"[10]," DNA quantity (16S rRNA gene copies per mL"^1, "/mg"^1)))
p2
pdf("../results/inhibition-test-graph2.pdf", height=6, width=6)
print(p2)
dev.off()
p2 = ggplot(data_wide2, aes(x=log10TotalMean, y=log10Dif)) +
geom_point(size=4) +
geom_hline(yintercept=0)+
geom_hline(yintercept=mean_dif, linetype="dashed", color = "red")+
theme_bw()+
xlab(expression(paste("Mean log"[10]," DNA quantified by undiluted and diluted qPCR")))+
ylab(expression(paste("Difference in Log"[10]," DNA quantity (16S rRNA gene copies per mL"^-1, "/mg"^-1)))
p2
pdf("../results/inhibition-test-graph2.pdf", height=6, width=6)
print(p2)
dev.off()
#confidence intervals
lower_limit <- mean_dif â€“ 1.91*sd(data_wide2$log10Dif)
#confidence intervals
lower_limit <- mean_dif - 1.91*sd(data_wide2$log10Dif)
upper_limit <- mean_dif + 1.91*sd(data_wide2$log10Dif)
p2 = ggplot(data_wide2, aes(x=log10TotalMean, y=log10Dif)) +
geom_point(size=4) +
geom_hline(yintercept=0)+
geom_hline(yintercept=mean_dif, linetype="dashed", color = "red")+
geom_hline(yintercept=lower_limit, color = "blue")+
geom_hline(yintercept=upper_limit, color = "blue")+
theme_bw()+
xlab(expression(paste("Mean Log"[10]," DNA quantified by undiluted and diluted qPCR")))+
ylab(expression(paste("Difference in Log"[10]," DNA quantity (16S rRNA gene copies per mL"^-1, "/mg"^-1)))
p2
pdf("../results/inhibition-test-graph2.pdf", height=6, width=6)
print(p2)
dev.off()
rm(list=ls())
graphics.off()
library(tidyverse)
library(phyloseq)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
library(readr)
library(seqinr)
#BiocManager::install("decontam")
library(decontam)
BiocManager::install("decontam")
library(vegan)
library(magrittr)
library(data.table)
library(ape) #appe::Ntip
library(dplyr)
#install BiocManager packages
install.packages("BiocManager", repos = "https://cloud.r-project.org")
rm(list=ls())
graphics.off()
#install packages
library(readr)
#install packages
install.packages("readr")
tar --version
install.packages("readr", type = "source")
library(readr)
getOption("pkgType")
ls
Sys.getenv("PATH")
rm(list=ls())
graphics.off()
#load packages
library(ggplot2)
setwd("~/Documents/GitHub/PhD/2023-Active-and-dormant/PMA/code")
#load data
df = read.csv("../data/meta_qpcr_res.csv")
View(df)
#load data
df = read.csv("../data/meta_qpcr_res.csv", sep=" ")
View(df)
#load data
df = read.csv("../data/meta_qpcr_res.csv", sep="t")
View(df)
#load data
df = read.csv("../data/meta_qpcr_res.csv", sep="")
View(df)
#load data
df = read.csv("../data/meta_qpcr_res.csv", sep="\t")
View(df)
geom_point(data=df, aes(x=Sample, y=Gene.copies.per.mL.g, shape=Treatment, fill= Habitat),
alpha=.5, size=4)+
scale_shape_manual(values = c(21,24))+
#xlim(-1.5, 4.5)+
guides(fill=guide_legend(override.aes=list(shape=21)))+
theme_bw()+
theme(legend.position=c(.8,.55),
legend.box="vertical", legend.margin=margin(),
legend.title=element_blank())
#plot
geom_point(data=df, aes(x=Sample, y=Gene.copies.per.mL.g, shape=Treatment, fill= Habitat),
alpha=.5, size=4)#+
plot(df$Sample, df$Gene.Copies.Per.mL.g)
geom_point(data=df, aes(x=DNA.Concentraton, y=Gene.copies.per.mL.g, shape=Treatment, fill= Habitat),
alpha=.5, size=4)
geom_point(data=df, aes(x=DNA.Concentraton, y=Gene.copies.per.mL.g),
alpha=.5, size=4)
geom_point(data=df, aes(x=Gene.Copies.Extracted, y=Gene.Copies.Per.mL.g),
alpha=.5, size=4)
#load packages
library(ggplot2)
geom_point(data=df, aes(x=Gene.Copies.Extracted, y=Gene.Copies.Per.mL.g),
alpha=.5, size=4)
ggplot(data=data2plot) +
geom_point(data=df, aes(x=Gene.Copies.Extracted, y=Gene.Copies.Per.mL.g),
alpha=.5, size=4)
ggplot(data=df) +
geom_point(data=df, aes(x=Gene.Copies.Extracted, y=Gene.Copies.Per.mL.g),
alpha=.5, size=4)
geom_point(data=df, aes(x=Sample, y=Gene.Copies.Per.mL.g),
alpha=.5, size=4)
ggplot(df) +
geom_point(aes(Sample, Gene.Copies.Per.mL.g, color = Treatment)) +
theme_minimal()
View(df)
ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, Gene.Copies.Per.mL.g, color = Treatment)) +
theme_minimal()
ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log(Gene.Copies.Per.mL.g), color = Treatment)) +
theme_minimal()
ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log(Gene.Copies.Per.mL.g), color = Treatment)) +
theme_minimal()+
ylab("log Gene Copies per mL/g")+
ylab("Sample")
#plot
ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log(Gene.Copies.Per.mL.g), color = Treatment)) +
theme_minimal()+
ylab("log Gene Copies per mL/g")+
xlab("Sample")
#plot
ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log(Gene.Copies.Per.mL.g), color = Treatment)) +
theme_minimal()+
ylab("log Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))
df$Habitat = factor(df$Habitat, levels=c("Snow", "Spring Ice", "Summer Ice", "Cryoconite", "Control"))
#plot
ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log(Gene.Copies.Per.mL.g), color = Treatment)) +
theme_minimal()+
ylab("log Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))
ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log(Gene.Copies.Per.mL.g), color = Treatment)) +
theme_minimal()+
ylab("log Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5),
legend.title=element_blank())
ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log(Gene.Copies.Per.mL.g), color = Treatment, alpha=.5, size=4)) +
theme_minimal()+
ylab("log Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5),
legend.title=element_blank())
ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log(Gene.Copies.Per.mL.g), color = Treatment, alpha=.5, size=4)) +
theme_minimal()+
ylab("log Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5),
legend.title=element_blank())+
guides(fill=guide_legend(override.aes=list(shape=21)))+
scale_shape_manual(values = c(21,24))
ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log(Gene.Copies.Per.mL.g), color = Treatment, alpha=.5, size=4)) +
theme_minimal()+
ylab("log Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5),
legend.title=element_blank())+
guides(fill=guide_legend(override.aes=list(shape=21, alpha=.5, size=4)))+
scale_shape_manual(values = c(21,24))
ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log(Gene.Copies.Per.mL.g), color = Treatment, alpha=.5, size=4)) +
ylab("log Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
guides(fill=guide_legend(override.aes=list(shape=21, alpha=.5, size=4)))+
scale_shape_manual(values = c(21,24))+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5),
legend.title=element_blank())
ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log(Gene.Copies.Per.mL.g), color = Treatment, shape = Treatement, alpha=.5, size=4)) +
ylab("log Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
guides(fill=guide_legend(override.aes=list(shape=21, alpha=.5, size=4)))+
scale_shape_manual(values = c(21,24))+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5),
legend.title=element_blank())
ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log(Gene.Copies.Per.mL.g), color = Treatment, shape = Treatment, alpha=.5, size=4)) +
ylab("log Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
guides(fill=guide_legend(override.aes=list(shape=21, alpha=.5, size=4)))+
scale_shape_manual(values = c(21,24))+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5),
legend.title=element_blank())
ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log(Gene.Copies.Per.mL.g), color = Treatment, shape = Treatment, alpha=.5, size=4)) +
ylab("log Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
guides(fill=guide_legend(override.aes=list(shape=21, alpha=.5, size=4)))+
scale_shape_manual(values = c(21,24))+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5),
legend.title=element_blank())+
theme_bw()
ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log(Gene.Copies.Per.mL.g), color = Treatment, shape = Treatment, alpha=.5, size=4)) +
ylab("log Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
guides(fill=guide_legend(override.aes=list(shape=21, alpha=.5, size=6)))+
scale_shape_manual(values = c(21,24))+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5),
legend.title=element_blank())+
theme_bw()
ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log(Gene.Copies.Per.mL.g), color = Treatment, shape = Treatment, alpha=.5, size=4)) +
ylab("log Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
guides(color=guide_legend(override.aes=list(shape=21, alpha=.5, size=6)))+
scale_shape_manual(values = c(21,24))+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5),
legend.title=element_blank())+
theme_bw()
ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log(Gene.Copies.Per.mL.g), color = Treatment, shape = Treatment, alpha=.5, size=4)) +
ylab("log Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
guides(color=guide_legend(override.aes=list(shape=c(21,24), alpha=.5, size=6)))+
scale_shape_manual(values = c(21,24))+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5),
legend.title=element_blank())+
theme_bw()
ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log(Gene.Copies.Per.mL.g), color = Treatment, shape = Treatment)) +
ylab("log Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
guides(color=guide_legend(override.aes=list(shape=c(21,24), alpha=.5, size=6)))+
scale_shape_manual(values = c(21,24))+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5),
legend.title=element_blank())+
theme_bw()
ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log(Gene.Copies.Per.mL.g), color = Treatment, shape = Treatment, size=4)) +
ylab("log Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
guides(color=guide_legend(override.aes=list(shape=c(21,24), alpha=.5, size=6)))+
scale_shape_manual(values = c(21,24))+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5),
legend.title=element_blank())+
theme_bw()
ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log(Gene.Copies.Per.mL.g), color = Treatment, shape = Treatment), size=4) +
ylab("log Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
guides(color=guide_legend(override.aes=list(shape=c(21,24), alpha=.5, size=6)))+
scale_shape_manual(values = c(21,24))+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5),
legend.title=element_blank())+
theme_bw()
ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log(Gene.Copies.Per.mL.g), color = Treatment, shape = Treatment), size=4) +
ylab("log Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
guides(color=guide_legend(override.aes=list(shape=c(21,24), alpha=.5, size=4)))+
scale_shape_manual(values = c(21,24))+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5),
legend.title=element_blank())+
theme_bw()
ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log(Gene.Copies.Per.mL.g), color = Treatment, shape = Treatment), size=4) +
ylab("log Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
guides(color=guide_legend(override.aes=list(shape=c(21,24), alpha=.5, size=4)))+
scale_shape_manual(values = c(21,24))+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5),
legend.title=element_blank())
ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log(Gene.Copies.Per.mL.g), color = Treatment, shape = Treatment), size=4) +
ylab("log Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
guides(color=guide_legend(override.aes=list(shape=c(21,24), alpha=.5, size=4)))+
scale_shape_manual(values = c(21,24))+
theme_bw()+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5),
legend.title=element_blank())
#statistical difference between gene copies in treated and untreated samples
t.test(Gene.Copies.Per.mL.g ~ Treatment, paired = TRUE, data = df)
tdna <- subset(df,  group == "tDNA", Gene.Copies.Per.mL.g,
drop = TRUE)
tdna <- subset(df,  Treatment == "tDNA", Gene.Copies.Per.mL.g,
drop = TRUE)
idna <- subset(df,  Treatment == "iDNA", Gene.Copies.Per.mL.g,
drop = TRUE)
# Plot paired data
library(PairedData)
# Plot paired data
library(PairedData)
pd <- paired(tdna, idna)
plot(pd, type = "profile") + theme_bw()
View(pd)
plot(log(pd), type = "profile") + theme_bw()
pd <- paired(log(tdna), log(idna))
plot(pd, type = "profile") + theme_bw()
pd <- paired(log(tdna), log(idna))
plot(pd, type = "profile") + theme_bw()
# Subset gene data without treatment
tdna <- subset(df,  Treatment == "tDNA", Gene.Copies.Per.mL.g,
drop = TRUE)
# subset gene data with treatment
idna <- subset(df,  Treatment == "iDNA", Gene.Copies.Per.mL.g,
drop = TRUE)
# Plot paired data
library(PairedData)
pd <- paired(tdna, idna)
plot(pd, type = "profile") + theme_bw()
#nonparametric paired sample Wilcoxon test
res <- wilcox.test(tdna, idna, paired = TRUE)
res
res <- wilcox.test(Gene.Copies.Per.mL.g ~ Treatment, data = df, paired = TRUE)
res
res <- wilcox.test(Gene.Copies.Per.mL.g ~ Treatment, data = df, paired = TRUE,
alternative="less")
res
res <- wilcox.test(Gene.Copies.Per.mL.g ~ Treatment, data = df, paired = TRUE)
res
View(df)
res <- wilcox.test(Gene.Copies.Per.mL.g ~ Treatment, data = df, paired = TRUE,
alternative="greater")
res
res <- wilcox.test(Gene.Copies.Per.mL.g ~ Treatment, data = df, paired = TRUE,
alternative="less")
res
library(dplyr)
group_by(df, Treatment, Habitat) %>%
summarise(
count = n(),
median = median(Gene.Copies.Per.mL.g, na.rm = TRUE),
IQR = IQR(Gene.Copies.Per.mL.g, na.rm = TRUE)
)
group_by(df, Treatment, Habitat) %>%
summarise(
count = n(),
mean = mean(Gene.Copies.Per.mL.g, na.rm = TRUE),
median = median(Gene.Copies.Per.mL.g, na.rm = TRUE),
IQR = IQR(Gene.Copies.Per.mL.g, na.rm = TRUE)
)
d <- with(df,
Gene.Copies.Per.mL.g[Treatment == "tDNA"] - Gene.Copies.Per.mL.g[Treatment == "iDNA"])
# Shapiro-Wilk normality test for the differences
shapiro.test(d) # => p-value = 0.6141
p = ggplot(df) +
geom_point(aes(Sample.Name.To.Plot, log(Gene.Copies.Per.mL.g), color = Treatment, shape = Treatment), size=4) +
ylab("log Gene Copies per mL/g")+
xlab("Sample")+
facet_grid(cols = vars(Habitat), scales = "free", space = "free", labeller = label_wrap_gen(width=10))+
guides(color=guide_legend(override.aes=list(shape=c(21,24), alpha=.5, size=4)))+
scale_shape_manual(values = c(21,24))+
theme_bw()+
theme(legend.position="bottom",
axis.text.x = element_text(angle = 45, vjust = 0.5),
legend.title=element_blank())
#save the plot
pdf("../results/qPCR-plot.pdf")
print(p)
dev.off()
pdf("../results/qPCR-plot.pdf", height=10, width=15)
print(p)
dev.off()
pdf("../results/qPCR-plot.pdf", height=8, width=15)
print(p)
dev.off()
pdf("../results/qPCR-plot.pdf", height=5, width=15)
print(p)
dev.off()
res <- wilcox.test(Gene.Copies.Per.mL.g ~ Treatment, data = df[df$Habitat == "Snow",], paired = TRUE,
alternative="less")
res
res <- wilcox.test(Gene.Copies.Per.mL.g ~ Treatment, data = df[df$Habitat == "Snow",], paired = TRUE)
res
sp <- wilcox.test(Gene.Copies.Per.mL.g ~ Treatment, data = df[df$Habitat == "Spring Ice",], paired = TRUE)
sp
sm <- wilcox.test(Gene.Copies.Per.mL.g ~ Treatment, data = df[df$Habitat == "Summer Ice",], paired = TRUE)
sm
cr <- wilcox.test(Gene.Copies.Per.mL.g ~ Treatment, data = df[df$Habitat == "Cryoconite",], paired = TRUE)
cr
sn <- wilcox.test(Gene.Copies.Per.mL.g ~ Treatment, data = df[df$Habitat == "Snow",], paired = TRUE)
sn
sp <- wilcox.test(Gene.Copies.Per.mL.g ~ Treatment, data = df[df$Habitat == "Spring Ice",], paired = TRUE)
sp
sm <- wilcox.test(Gene.Copies.Per.mL.g ~ Treatment, data = df[df$Habitat == "Summer Ice",], paired = TRUE)
sm
cr <- wilcox.test(Gene.Copies.Per.mL.g ~ Treatment, data = df[df$Habitat == "Cryoconite",], paired = TRUE)
cr
