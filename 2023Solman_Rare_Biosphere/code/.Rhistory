sub = subset_samples(euk, Subcommunity == "Abundant" & Pole == "Arctic")
rel = transform_sample_counts(sub, function(x) x/sum(x))
dis <- phyloseq::distance(sub, method = "bray")
dis.melt = melt(as.matrix(dis))
names(dis.melt) = c("Sample1", "Sample2", "Beta")
#remove samples being compared to themseves
df = dis.melt[dis.melt['Sample1'] != dis.melt['Sample2'],]
df$group = "Eukaryote"
df$pole = "Arctic"
df$Subcommunity = "Abundant"
keep.df = rbind(keep.df, df)
#get bray dissimilarities matrix and melt
sub = subset_samples(euk, Subcommunity == "Intermediate" & Pole == "Arctic")
rel = transform_sample_counts(sub, function(x) x/sum(x))
dis <- phyloseq::distance(sub, method = "bray")
dis.melt = melt(as.matrix(dis))
names(dis.melt) = c("Sample1", "Sample2", "Beta")
#remove samples being compared to themseves
df = dis.melt[dis.melt['Sample1'] != dis.melt['Sample2'],]
df$group = "Eukaryote"
df$pole = "Arctic"
df$Subcommunity = "Intermediate"
keep.df = rbind(keep.df, df)
#get bray dissimilarities matrix and melt
sub = subset_samples(euk, Subcommunity == "Rare" & Pole == "Arctic")
rel = transform_sample_counts(sub, function(x) x/sum(x))
dis <- phyloseq::distance(sub, method = "bray")
dis.melt = melt(as.matrix(dis))
names(dis.melt) = c("Sample1", "Sample2", "Beta")
#remove samples being compared to themseves
df = dis.melt[dis.melt['Sample1'] != dis.melt['Sample2'],]
df$group = "Eukaryote"
df$pole = "Arctic"
df$Subcommunity = "Rare"
keep.df = rbind(keep.df, df)
#####EUKARYOTES ANTARCTIC##########
#get bray dissimilarities matrix and melt
sub = subset_samples(euk, Subcommunity == "Abundant" & Pole == "Arctic")
rel = transform_sample_counts(sub, function(x) x/sum(x))
dis <- phyloseq::distance(sub, method = "bray")
dis.melt = melt(as.matrix(dis))
names(dis.melt) = c("Sample1", "Sample2", "Beta")
#remove samples being compared to themseves
df = dis.melt[dis.melt['Sample1'] != dis.melt['Sample2'],]
df$group = "Eukaryote"
df$pole = "Antarctic"
df$Subcommunity = "Abundant"
keep.df = rbind(keep.df, df)
#get bray dissimilarities matrix and melt
sub = subset_samples(euk, Subcommunity == "Intermediate" & Pole == "Arctic")
rel = transform_sample_counts(sub, function(x) x/sum(x))
dis <- phyloseq::distance(sub, method = "bray")
dis.melt = melt(as.matrix(dis))
names(dis.melt) = c("Sample1", "Sample2", "Beta")
#remove samples being compared to themseves
df = dis.melt[dis.melt['Sample1'] != dis.melt['Sample2'],]
df$group = "Eukaryote"
df$pole = "Antarctic"
df$Subcommunity = "Intermediate"
keep.df = rbind(keep.df, df)
#get bray dissimilarities matrix and melt
sub = subset_samples(euk, Subcommunity == "Rare" & Pole == "Arctic")
rel = transform_sample_counts(sub, function(x) x/sum(x))
dis <- phyloseq::distance(sub, method = "bray")
dis.melt = melt(as.matrix(dis))
names(dis.melt) = c("Sample1", "Sample2", "Beta")
#remove samples being compared to themseves
df = dis.melt[dis.melt['Sample1'] != dis.melt['Sample2'],]
df$group = "Eukaryote"
df$pole = "Antarctic"
df$Subcommunity = "Rare"
keep.df = rbind(keep.df, df)
keep.df$group = factor(keep.df$group, levels = c("Prokaryote", "Eukaryote"))
keep.df$pole = factor(keep.df$pole, levels = c("Arctic", "Antarctic"))
#Combine plots
plot.a = ggarrange(p.nmds.1 + annotate("text",x=-Inf,y=-Inf,hjust=-7.5,vjust=-0.5, size=100,label=paste0("Stress:", round(ordBR$stress, 2))),
p.nmds.2 + annotate("text",x=-Inf,y=-Inf,hjust=-7.5,vjust=-0.5, size=100,label=paste0("Stress:", round(ordBR$stress, 2))),
ncol=2, nrow=1, common.legend = TRUE, legend="bottom",
font.label=list(size=20))
print(plot.a)
keep.df$Subcommunity = factor(keep.df$Subcommunity, levels = c("Rare", "Intermediate", "Abundant"))
#beta diversity boxplot
plot.b = ggplot(keep.df, aes(x=Subcommunity, y=Beta, fill = Subcommunity), alpha=0.8) +
geom_boxplot()+
#facet_grid(pole ~ group, margins=TRUE)
facet_wrap(~ group + pole, nrow = 1, scales = "free_x")+
ylab("Bray-Curtis Dissimilarities")+
scale_fill_manual(values=c("#82ca81", "#74a9d8", "#ef7a76"))+
theme_bw()+
theme(axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
legend.title = element_blank(),
legend.position = "none",
strip.text.x = element_text(size = 20))
print(plot.b)
# plot.c = plot.a / plot.b + plot_annotation(tag_levels = "A") &
# theme(plot.tag = element_text(size = 25))
# print(plot.c)
plot.c = plot_grid(plot.a, plot.b, nrow=2, labels="AUTO", label_size = 20)
print(plot.c)
pdf("../results/bray-NMDS-and-beta-diversity-boxplot.pdf", height=8, width=10)
print(plot.c)
dev.off()
###################################################################################################
###################################################################################################
rm(list=ls())
library(ggplot2)
library(phyloseq)
library(patchwork)
library(ggpubr)
library(glue)
library(tibble) # for add_column
library(reshape2)
library(cowplot)
library(betapart)
library(dplyr)
# 3. Import data and separate into Arctic and Antarctic samples
# 2. Import data
pro <- readRDS("../results/16S-phylo-object-sub-coms-merged.rds")
euk <- readRDS("../results/18S-phylo-object-sub-coms-merged.rds")
beta_part <- function(phylo, subcom, data, pole){
set.seed(666)
#normalisation of the data does not appear to work with this analyses. Have looked at other implementations of bray.part and the subcommunities were not normalised prior to this step (https://github.com/shuojiao/Rare-and-abundant-bacteria-/blob/master/Beta-diversity%20and%20CRT.R)
#for each subcommunity get the count table with rows as samples and species as columns
counts <- data.frame(t(otu_table(phylo)), check.names=FALSE)
#max(rowSums(counts)) - min(rowSums(counts))
#beta partition analysis
out = bray.part(counts)
#convert the matrices into a dataframe to plot
out.turn = melt(as.matrix(out$bray.bal))
names(out.turn) = c("Sample1", "Sample2", "Beta")
out.turn$Part = "Turnover"
out.rich = melt(as.matrix(out$bray.gra))
names(out.rich) = c("Sample1", "Sample2", "Beta")
out.rich$Part = "Richness"
out.whole = melt(as.matrix(out$bray))
names(out.whole) = c("Sample1", "Sample2", "Beta")
out.whole$Part = "Whole"
#bind data frame
three.df = rbind(out.whole, out.turn, out.rich)
#remove samples being compared to themseves
three.df.trim = three.df[three.df['Sample1'] != three.df['Sample2'],]
#add abundance class
three.df.trim$Subcommunity = subcom
#and dataset
three.df.trim$Data = data
three.df.trim$Pole = pole
#get proportions
two.df = rbind(out.turn, out.rich)
#remove samples being compared to themseves
two.df.trim = two.df[two.df['Sample1'] != two.df['Sample2'],]
#get proportions
two.df.trim$Proportion = two.df.trim$Beta/sum(two.df.trim$Beta)
sum(two.df.trim$Proportion)
two.df.trim$Subcommunity = subcom
two.df.trim$Data = data
two.df.trim$Pole = pole
res.list = list(three.df.trim, two.df.trim)
return(res.list)
}
ps = subset_samples(pro, Subcommunity == "Abundant" & Pole == "Arctic")
ps = filter_taxa(ps, function(x) sum(x) >= 1, TRUE)
ps = prune_samples(sample_sums(ps)>=1, ps)
pro.abun.beta.part.arc = beta_part(ps, "Abundant", "Prokaryote", "Arctic")
ps = subset_samples(pro, Subcommunity == "Intermediate" & Pole == "Arctic")
ps = filter_taxa(ps, function(x) sum(x) >= 1, TRUE)
ps = prune_samples(sample_sums(ps)>=1, ps)
pro.int.beta.part.arc = beta_part(ps, "Intermediate", "Prokaryote", "Arctic")
ps = subset_samples(pro, Subcommunity == "Rare" & Pole == "Arctic")
ps = filter_taxa(ps, function(x) sum(x) >= 1, TRUE)
ps = prune_samples(sample_sums(ps)>=1, ps)
pro.rare.beta.part.arc = beta_part(ps, "Rare", "Prokaryote", "Arctic")
ps = subset_samples(pro, Subcommunity == "Abundant" & Pole == "Antarctic")
ps = filter_taxa(ps, function(x) sum(x) >= 1, TRUE)
ps = prune_samples(sample_sums(ps)>=1, ps)
pro.abun.beta.part.ant = beta_part(ps, "Abundant", "Prokaryote", "Antarctic")
ps = subset_samples(pro, Subcommunity == "Intermediate" & Pole == "Antarctic")
ps = filter_taxa(ps, function(x) sum(x) >= 1, TRUE)
ps = prune_samples(sample_sums(ps)>=1, ps)
pro.int.beta.part.ant = beta_part(ps, "Intermediate", "Prokaryote", "Antarctic")
ps = subset_samples(pro, Subcommunity == "Rare" & Pole == "Antarctic")
ps = filter_taxa(ps, function(x) sum(x) >= 1, TRUE)
ps = prune_samples(sample_sums(ps)>=1, ps)
pro.rare.beta.part.ant = beta_part(ps, "Rare", "Prokaryote", "Antarctic")
ps = subset_samples(euk, Subcommunity == "Abundant" & Pole == "Arctic")
ps = filter_taxa(ps, function(x) sum(x) >= 1, TRUE)
ps = prune_samples(sample_sums(ps)>=1, ps)
euk.abun.beta.part.arc = beta_part(ps, "Abundant", "Eukaryote", "Arctic")
ps = subset_samples(euk, Subcommunity == "Intermediate" & Pole == "Arctic")
ps = filter_taxa(ps, function(x) sum(x) >= 1, TRUE)
ps = prune_samples(sample_sums(ps)>=1, ps)
euk.int.beta.part.arc = beta_part(ps, "Intermediate", "Eukaryote", "Arctic")
ps = subset_samples(euk, Subcommunity == "Rare" & Pole == "Arctic")
ps = filter_taxa(ps, function(x) sum(x) >= 1, TRUE)
ps = prune_samples(sample_sums(ps)>=1, ps)
euk.rare.beta.part.arc = beta_part(ps, "Rare", "Eukaryote", "Arctic")
ps = subset_samples(euk, Subcommunity == "Abundant" & Pole == "Antarctic")
ps = filter_taxa(ps, function(x) sum(x) >= 1, TRUE)
ps = prune_samples(sample_sums(ps)>=1, ps)
euk.abun.beta.part.ant = beta_part(ps, "Abundant", "Eukaryote", "Antarctic")
ps = subset_samples(euk, Subcommunity == "Intermediate" & Pole == "Antarctic")
ps = filter_taxa(ps, function(x) sum(x) >= 1, TRUE)
ps = prune_samples(sample_sums(ps)>=1, ps)
euk.int.beta.part.ant = beta_part(ps, "Intermediate", "Eukaryote", "Antarctic")
ps = subset_samples(euk, Subcommunity == "Rare" & Pole == "Antarctic")
ps = filter_taxa(ps, function(x) sum(x) >= 1, TRUE)
ps = prune_samples(sample_sums(ps)>=1, ps)
euk.rare.beta.part.ant = beta_part(ps, "Rare", "Eukaryote", "Antarctic")
# 1. Clear workspace and load packages
rm(list=ls())
graphics.off()
library(phyloseq)
library(RColorBrewer)
# library(tidyr) #trans data between wide and long format
library(ggplot2)
library(vegan) #anosim function
# source("00-solman-functions.R")
# library(BiodiversityR) #for rank abundance curves
# library(dplyr)
library(cowplot)
# library(reshape)
# library(funrar) #for make relative
# library(stringr) #mutate function, to split columns
# library(gridExtra) #for exporting as pdf
# library(scales)
# library(microbiome) #for summarize_phyloseq
library(tibble) # for add_column
library(patchwork)
library(glue)
library(dendextend)
# Sys.setenv("R_REMOTES_NO_ERRORS_FROM_WARNINGS"=TRUE)
# library(devtools)
# install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
library(pairwiseAdonis)
pro <- readRDS("../results/16S-phylo-object-sub-coms-merged.rds")
euk <- readRDS("../results/18S-phylo-object-sub-coms-merged.rds")
#subset to abundant coms only
ps1 = subset_samples(pro, Subcommunity == "Abundant")
#remove taxa or samples with zero counts
ps1 = filter_taxa(ps1, function(x) sum(x) >= 1, TRUE)
ps1 = prune_samples(sample_sums(ps1)>=1, ps1)
sort(sample_sums(ps1), decreasing = TRUE)
#transform data by relative abundance
ps1.rel = transform_sample_counts(ps1, function(x) x/sum(x))
colSums(data.frame(otu_table(ps1.rel))) == 1 #should all be TRUE
#Generate distance matrix
dist_matrix <- phyloseq::distance(ps1.rel, method = "bray")
#subset to abundant coms only
ps1 = subset_samples(pro, Subcommunity == "Abundant")
#remove taxa or samples with zero counts
ps1 = filter_taxa(ps1, function(x) sum(x) >= 1, TRUE)
ps1 = prune_samples(sample_sums(ps1)>=1, ps1)
#transform data by relative abundance
ps1.rel = transform_sample_counts(ps1, function(x) x/sum(x))
colSums(data.frame(otu_table(ps1.rel))) == 1 #should all be TRUE
#Generate distance matrix
dist_matrix <- phyloseq::distance(ps1.rel, method = "bray")
#ADONIS test for differences between our groups (Poles)
vegan::adonis2(dist_matrix ~ phyloseq::sample_data(ps1.rel)$Pole)
# 1. Clear workspace and load packages
rm(list=ls())
graphics.off()
library(phyloseq)
library(RColorBrewer)
# library(tidyr) #trans data between wide and long format
library(ggplot2)
library(vegan) #anosim function
# source("00-solman-functions.R")
# library(BiodiversityR) #for rank abundance curves
# library(dplyr)
library(cowplot)
# library(reshape)
# library(funrar) #for make relative
# library(stringr) #mutate function, to split columns
# library(gridExtra) #for exporting as pdf
# library(scales)
# library(microbiome) #for summarize_phyloseq
library(tibble) # for add_column
library(patchwork)
library(glue)
library(dendextend)
# Sys.setenv("R_REMOTES_NO_ERRORS_FROM_WARNINGS"=TRUE)
# library(devtools)
# install_github("pmartinezarbizu/pairwiseAdonis/pairwiseAdonis")
library(pairwiseAdonis)
pro <- readRDS("../results/16S-phylo-object-sub-coms-merged.rds")
euk <- readRDS("../results/18S-phylo-object-sub-coms-merged.rds")
#subset to abundant coms only
ps1 = subset_samples(pro, Subcommunity == "Abundant")
#remove taxa or samples with zero counts
ps1 = filter_taxa(ps1, function(x) sum(x) >= 1, TRUE)
ps1 = prune_samples(sample_sums(ps1)>=1, ps1)
#transform data by relative abundance
ps1.rel = transform_sample_counts(ps1, function(x) x/sum(x))
colSums(data.frame(otu_table(ps1.rel))) == 1 #should all be TRUE
#Generate distance matrix
dist_matrix <- phyloseq::distance(ps1.rel, method = "bray")
#ADONIS test for differences between our groups (Poles)
vegan::adonis2(dist_matrix ~ phyloseq::sample_data(ps1.rel)$Pole)
#Dispersion test and plot
dispr <- vegan::betadisper(dist_matrix, phyloseq::sample_data(ps1.rel)$Pole)
permutest(dispr) #indicates significantly different dispersion between the groups
plot(dispr, main = "Ordination Centroids and Dispersion Labeled: Aitchison Distance", sub = "")
boxplot(dispr, main = "", xlab = "")
#look for significant differences in the dissimilarities of our habitats/locations
pro.abun.pair.out = pairwise.adonis(dist_matrix, phyloseq::sample_data(ps1.rel)$Pole)
View(pro.abun.pair.out)
#subset to abundant coms only
ps2 = subset_samples(pro, Subcommunity == "Intermediate")
#remove taxa or samples with zero counts
ps2 = filter_taxa(ps2, function(x) sum(x) >= 1, TRUE)
ps2 = prune_samples(sample_sums(ps2)>=1, ps2)
#transform data by relative abundance
ps2.rel = transform_sample_counts(ps2, function(x) x/sum(x))
colSums(data.frame(otu_table(ps2.rel))) == 1 #should all be TRUE
#Generate distance matrix
dist_matrix <- phyloseq::distance(ps2.rel, method = "bray")
#ADONIS test for differences between our groups (Poles)
vegan::adonis2(dist_matrix ~ phyloseq::sample_data(ps2.rel)$Pole)
#Dispersion test and plot
dispr <- vegan::betadisper(dist_matrix, phyloseq::sample_data(ps2.rel)$Pole)
permutest(dispr) #indicates no significantly different dispersion between the groups
plot(dispr, main = "Ordination Centroids and Dispersion Labeled: Aitchison Distance", sub = "")
boxplot(dispr, main = "", xlab = "")
#look for significant differences in the dissimilarities of our habitats/locations
pro.int.pair.out = pairwise.adonis(dist_matrix, phyloseq::sample_data(ps2.rel)$Pole)
write.csv(pro.int.pair.out, "../results/PERMANOVA-intermediate-prokaryotes.csv")
#subset to abundant coms only
ps3 = subset_samples(pro, Subcommunity == "Rare")
#remove taxa or samples with zero counts
ps3 = filter_taxa(ps3, function(x) sum(x) >= 1, TRUE)
ps3 = prune_samples(sample_sums(ps3)>=1, ps3)
#transform data by relative abundance
ps3.rel = transform_sample_counts(ps3, function(x) x/sum(x))
colSums(data.frame(otu_table(ps3.rel))) == 1 #should all be TRUE
#Generate distance matrix
dist_matrix <- phyloseq::distance(ps3.rel, method = "bray")
#ADONIS test for differences between our groups (Poles)
vegan::adonis2(dist_matrix ~ phyloseq::sample_data(ps3.rel)$Pole)
#Dispersion test and plot
dispr <- vegan::betadisper(dist_matrix, phyloseq::sample_data(ps3.rel)$Pole)
permutest(dispr) #indicates no significantly different dispersion between the groups
#plot
plot(dispr, main = "Ordination Centroids and Dispersion Labeled: Aitchison Distance", sub = "")
boxplot(dispr, main = "", xlab = "")
#plot
plot(dispr, main = "Ordination Centroids and Dispersion Labeled: Aitchison Distance", sub = "")
#look for significant differences in the dissimilarities of our habitats/locations
pro.rare.pair.out = pairwise.adonis(dist_matrix, phyloseq::sample_data(ps3.rel)$Pole)
write.csv(pro.rare.pair.out, "../results/PERMANOVA-rare-prokaryotes.csv")
View(pro.rare.pair.out)
#subset to abundant coms only
ps4 = subset_samples(euk, Subcommunity == "Abundant")
#remove taxa or samples with zero counts
ps4 = filter_taxa(ps4, function(x) sum(x) >= 1, TRUE)
ps4 = prune_samples(sample_sums(ps4)>=1, ps4)
#transform data by relative abundance
ps4.rel = transform_sample_counts(ps4, function(x) x/sum(x))
colSums(data.frame(otu_table(ps4.rel))) == 1 #should all be TRUE
#Generate distance matrix
dist_matrix <- phyloseq::distance(ps4.rel, method = "bray")
#ADONIS test for differences between our groups (Poles)
vegan::adonis2(dist_matrix ~ phyloseq::sample_data(ps4.rel)$Pole)
#Dispersion test and plot
dispr <- vegan::betadisper(dist_matrix, phyloseq::sample_data(ps4.rel)$Pole)
permutest(dispr) #indicates no significantly different dispersion between the groups
dispr <- vegan::betadisper(dist_matrix, phyloseq::sample_data(ps4.rel)$Pole)
permutest(dispr)
#plot
plot(dispr, main = "Ordination Centroids and Dispersion Labeled: Aitchison Distance", sub = "")
boxplot(dispr, main = "", xlab = "")
euk.abun.pair.out = pairwise.adonis(dist_matrix, phyloseq::sample_data(ps4.rel)$Pole)
write.csv(euk.abun.pair.out, "../results/PERMANOVA-abundant-eukaryotes.csv")
#subset to abundant coms only
ps5 = subset_samples(euk, Subcommunity == "Intermediate")
#remove taxa or samples with zero counts
ps5 = filter_taxa(ps5, function(x) sum(x) >= 1, TRUE)
ps5 = prune_samples(sample_sums(ps5)>=1, ps5)
#transform data by relative abundance
ps5.rel = transform_sample_counts(ps5, function(x) x/sum(x))
colSums(data.frame(otu_table(ps5.rel))) == 1 #should all be TRUE
#Generate distance matrix
dist_matrix <- phyloseq::distance(ps5.rel, method = "bray")
#ADONIS test for differences between our groups (Poles)
vegan::adonis2(dist_matrix ~ phyloseq::sample_data(ps5.rel)$Pole)
#Dispersion test and plot
dispr <- vegan::betadisper(dist_matrix, phyloseq::sample_data(ps5.rel)$Pole)
permutest(dispr) #indicates no significantly different dispersion between the groups
#plot
plot(dispr, main = "Ordination Centroids and Dispersion Labeled: Aitchison Distance", sub = "")
boxplot(dispr, main = "", xlab = "")
#look for significant differences in the dissimilarities of our habitats/locations
euk.int.pair.out = pairwise.adonis(dist_matrix, phyloseq::sample_data(ps5.rel)$Pole)
write.csv(euk.int.pair.out, "../results/PERMANOVA-intermediate-eukaryotes.csv")
#subset to abundant coms only
ps6 = subset_samples(euk, Subcommunity == "Rare")
#remove taxa or samples with zero counts
ps6 = filter_taxa(ps6, function(x) sum(x) >= 1, TRUE)
ps6 = prune_samples(sample_sums(ps6)>=1, ps6)
#transform data by relative abundance
ps6.rel = transform_sample_counts(ps6, function(x) x/sum(x))
colSums(data.frame(otu_table(ps6.rel))) == 1 #should all be TRUE
#Generate distance matrix
dist_matrix <- phyloseq::distance(ps6.rel, method = "bray")
#ADONIS test for differences between our groups (Poles)
vegan::adonis2(dist_matrix ~ phyloseq::sample_data(ps6.rel)$Pole)
#Dispersion test and plot
dispr <- vegan::betadisper(dist_matrix, phyloseq::sample_data(ps6.rel)$Pole)
permutest(dispr) #indicates no significantly different dispersion between the groups
#plot
plot(dispr, main = "Ordination Centroids and Dispersion Labeled: Aitchison Distance", sub = "")
boxplot(dispr, main = "", xlab = "")
#look for significant differences in the dissimilarities of our habitats/locations
euk.rare.pair.out = pairwise.adonis(dist_matrix, phyloseq::sample_data(ps6.rel)$Pole)
write.csv(euk.rare.pair.out, "../results/PERMANOVA-rare-eukaryotes.csv")
#transform data by relative abundance
ps_pro.rel = transform_sample_counts(pro, function(x) x/sum(x))
colSums(data.frame(otu_table(ps_pro.rel))) == 1 #should all be TRUE
#Generate distance matrix
dist_matrix <- phyloseq::distance(ps_pro.rel, method = "bray")
#ADONIS test for differences between our groups (Poles)
vegan::adonis2(dist_matrix ~ phyloseq::sample_data(ps_pro.rel)$Subcommunity)
#Dispersion test and plot
dispr <- vegan::betadisper(dist_matrix, phyloseq::sample_data(ps_pro.rel)$Subcommunity)
permutest(dispr) #indicates significantly different dispersion between the groups
#plot
plot(dispr, main = "Ordination Centroids and Dispersion Labeled: Aitchison Distance", sub = "")
boxplot(dispr, main = "", xlab = "")
#plot
plot(dispr, main = "Ordination Centroids and Dispersion Labeled: Aitchison Distance", sub = "")
boxplot(dispr, main = "", xlab = "")
#look for significant differences in the dissimilarities of our subcommunities
pro.pair.out = pairwise.adonis(dist_matrix, phyloseq::sample_data(ps_pro.rel)$Subcommunity)
write.csv(pro.pair.out, "../results/PERMANOVA-prokaryotes.csv")
#remove taxa or samples with zero counts
ps_euk = filter_taxa(euk, function(x) sum(x) >= 1, TRUE)
ps_euk = prune_samples(sample_sums(ps_euk)>=1, ps_euk)
#transform data by relative abundance
ps_euk.rel = transform_sample_counts(ps_euk, function(x) x/sum(x))
colSums(data.frame(otu_table(ps_euk.rel))) == 1 #should all be TRUE
#Generate distance matrix
dist_matrix <- phyloseq::distance(ps_euk.rel, method = "bray")
#ADONIS test for differences between our groups (Poles)
vegan::adonis2(dist_matrix ~ phyloseq::sample_data(ps_euk.rel)$Subcommunity)
#Dispersion test and plot
dispr <- vegan::betadisper(dist_matrix, phyloseq::sample_data(ps_euk.rel)$Subcommunity)
permutest(dispr) #indicates significantly different dispersion between the groups
#plot
plot(dispr, main = "Ordination Centroids and Dispersion Labeled: Aitchison Distance", sub = "")
boxplot(dispr, main = "", xlab = "")
permutest(dispr) #indicates significantly different dispersion between the groups
#plot
plot(dispr, main = "Ordination Centroids and Dispersion Labeled: Aitchison Distance", sub = "")
boxplot(dispr, main = "", xlab = "")
#look for significant differences in the dissimilarities of our subcommunities
euk.pair.out = pairwise.adonis(dist_matrix, phyloseq::sample_data(ps_euk.rel)$Subcommunity)
write.csv(euk.pair.out, "../results/PERMANOVA-eukaryotes.csv")
View(euk.pair.out)
rbind(pro.pair.out, euk.pair.out)
rbind(pro.abun.pair.out, pro.int.pair.out, pro.rare.pair.out,
euk.abun.pair.out, euk.int.pair.out, euk.rare.pair.out,)
rbind(pro.abun.pair.out, pro.int.pair.out, pro.rare.pair.out,
euk.abun.pair.out, euk.int.pair.out, euk.rare.pair.out)
rbind(pro.abun.pair.out, pro.int.pair.out, pro.rare.pair.out,
euk.abun.pair.out, euk.int.pair.out, euk.rare.pair.out,
pro.pair.out, euk.pair.out)
res = rbind(pro.abun.pair.out, pro.int.pair.out, pro.rare.pair.out,
euk.abun.pair.out, euk.int.pair.out, euk.rare.pair.out,
pro.pair.out, euk.pair.out)
View(res)
group = c("Prokaryotes", "Prokaryotes", "Prokaryotes",
"Eukaryotes", "Eukaryotes", "Eukaryotes",
"Prokaryotes", "Eukaryotes")
View(res)
group = c("Prokaryotes", "Prokaryotes", "Prokaryotes",
"Eukaryotes", "Eukaryotes", "Eukaryotes",
"Prokaryotes", "Prokaryotes", "Prokaryotes",
"Eukaryotes", "Eukaryotes", "Eukaryotes")
res2 = cbind(group, res)
View(res2)
res = rbind(pro.abun.pair.out, pro.int.pair.out, pro.rare.pair.out,
euk.abun.pair.out, euk.int.pair.out, euk.rare.pair.out,
pro.pair.out, euk.pair.out)
group = c("Prokaryotes", "Prokaryotes", "Prokaryotes",
"Eukaryotes", "Eukaryotes", "Eukaryotes",
"Prokaryotes", "Prokaryotes", "Prokaryotes",
"Eukaryotes", "Eukaryotes", "Eukaryotes")
sub = c("Abundant", "Intermediate", "Rare",
"Abundant", "Intermediate", "Rare",
NA, NA, NA, NA, NA, NA)
res2 = cbind(group, sub, res)
View(res2)
res2$SumsOfSqs = round(res2$SumsOfSqs, 3)
res2$R2 = round(res2$R2, 3)
res = rbind(pro.abun.pair.out, pro.int.pair.out, pro.rare.pair.out,
euk.abun.pair.out, euk.int.pair.out, euk.rare.pair.out,
pro.pair.out, euk.pair.out)
group = c("Prokaryotes", "Prokaryotes", "Prokaryotes",
"Eukaryotes", "Eukaryotes", "Eukaryotes",
"Prokaryotes", "Prokaryotes", "Prokaryotes",
"Eukaryotes", "Eukaryotes", "Eukaryotes")
sub = c("Abundant", "Intermediate", "Rare",
"Abundant", "Intermediate", "Rare",
NA, NA, NA, NA, NA, NA)
res2 = cbind(group, sub, res)
#round our results
res2$SumsOfSqs = round(res2$SumsOfSqs, 3)
res2$F.Model = round(res2$F.Model, 3)
res2$R2 = round(res2$R2, 3)
#export table
write.csv(res2, "../results/PERMANOVA.csv")
